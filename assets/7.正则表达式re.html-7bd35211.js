const e=JSON.parse('{"key":"v-d79ac70a","path":"/docs/python/%E7%88%AC%E8%99%AB/7.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fre.html","title":"7.正则表达式re","lang":"zh-CN","frontmatter":{"title":"7.正则表达式re","icon":"book","order":7,"index":true,"article":false,"description":"实际上爬虫一共就四个主要步骤： 1. 明确目标 (要知道你准备在哪个范围或者网站去搜索) 2. 爬 (将所有的网站的内容全部爬下来) 3. 取 (去掉对我们没用处的数据) 4. 处理数据（按照我们想要的方式存储和使用） 我们在昨天的案例里实际上省略了第3步，也就是\\"取\\"的步骤。因为我们down下了的数据是全部的网页，这些数据很庞大并且很混乱，大部分的东...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/docs/python/%E7%88%AC%E8%99%AB/7.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fre.html"}],["meta",{"property":"og:site_name","content":"暴走の海鸽"}],["meta",{"property":"og:title","content":"7.正则表达式re"}],["meta",{"property":"og:description","content":"实际上爬虫一共就四个主要步骤： 1. 明确目标 (要知道你准备在哪个范围或者网站去搜索) 2. 爬 (将所有的网站的内容全部爬下来) 3. 取 (去掉对我们没用处的数据) 4. 处理数据（按照我们想要的方式存储和使用） 我们在昨天的案例里实际上省略了第3步，也就是\\"取\\"的步骤。因为我们down下了的数据是全部的网页，这些数据很庞大并且很混乱，大部分的东..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-17T10:24:44.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"7.正则表达式re"}],["meta",{"property":"article:author","content":"Mr.暴走の海鸽"}],["meta",{"property":"article:modified_time","content":"2024-07-17T10:24:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"7.正则表达式re\\",\\"description\\":\\"实际上爬虫一共就四个主要步骤： 1. 明确目标 (要知道你准备在哪个范围或者网站去搜索) 2. 爬 (将所有的网站的内容全部爬下来) 3. 取 (去掉对我们没用处的数据) 4. 处理数据（按照我们想要的方式存储和使用） 我们在昨天的案例里实际上省略了第3步，也就是\\\\\\"取\\\\\\"的步骤。因为我们down下了的数据是全部的网页，这些数据很庞大并且很混乱，大部分的东...\\"}"]]},"headers":[{"level":3,"title":"什么是正则表达式","slug":"什么是正则表达式","link":"#什么是正则表达式","children":[]},{"level":3,"title":"正则表达式匹配规则","slug":"正则表达式匹配规则","link":"#正则表达式匹配规则","children":[]},{"level":3,"title":"Python 的 re 模块","slug":"python-的-re-模块","link":"#python-的-re-模块","children":[]},{"level":3,"title":"案例：使用正则表达式的爬虫","slug":"案例-使用正则表达式的爬虫","link":"#案例-使用正则表达式的爬虫","children":[]}],"git":{"createdTime":1721126514000,"updatedTime":1721211884000,"contributors":[{"name":"lianhaifeng","email":"lianhaifeng@rongannetworks.com","commits":2}]},"readingTime":{"minutes":12.51,"words":3754},"filePathRelative":"docs/python/爬虫/7.正则表达式re.md","localizedDate":"2024年7月16日","excerpt":"","autoDesc":true}');export{e as data};
