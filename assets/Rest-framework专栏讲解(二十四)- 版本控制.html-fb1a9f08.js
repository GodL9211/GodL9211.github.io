import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as i,c as p,a as n,b as e,e as s,f as o}from"./app-9976b6d0.js";const c={},d=o('<h1 id="rest-framework专栏讲解-二十四-版本控制" tabindex="-1"><a class="header-anchor" href="#rest-framework专栏讲解-二十四-版本控制" aria-hidden="true">#</a> Rest-framework专栏讲解(二十四): 版本控制</h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">版本控制</a><ul><li><a href="#%E4%BD%BF%E7%94%A8-REST-framework-%E8%BF%9B%E8%A1%8C%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">使用 REST framework 进行版本控制</a><ul><li><a href="#%E5%9F%BA%E4%BA%8E%E7%89%88%E6%9C%AC%E7%9A%84%E5%8F%98%E5%8C%96%E8%A1%8C%E4%B8%BA">基于版本的变化行为</a></li><li><a href="#%E5%8F%8D%E5%90%91%E8%A7%A3%E6%9E%90%E7%89%88%E6%9C%AC%E5%8C%96-API-%E7%9A%84-URL">反向解析版本化 API 的 URL</a></li><li><a href="#%E7%89%88%E6%9C%AC%E5%8C%96%E7%9A%84-API-%E5%92%8C%E8%B6%85%E9%93%BE%E6%8E%A5%E5%BA%8F%E5%88%97%E5%8C%96%E7%B1%BB">版本化的 API 和超链接序列化类</a></li></ul></li><li><a href="#%E9%85%8D%E7%BD%AE%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%96%B9%E6%A1%88">配置版本控制方案</a><ul><li><a href="#%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC%E8%AE%BE%E7%BD%AE">其他版本设置</a></li></ul></li></ul></li><li><a href="#API-%E5%8F%82%E8%80%83">API 参考</a><ul><li><a href="#AcceptHeaderVersioning">AcceptHeaderVersioning</a><ul><li><a href="#%E4%BD%BF%E7%94%A8-accept-header-%E5%92%8C-vendor-media-type">使用 accept header 和 vendor media type</a></li></ul></li><li><a href="#URLPathVersioning">URLPathVersioning</a></li><li><a href="#NamespaceVersioning">NamespaceVersioning</a></li><li><a href="#HostNameVersioning">HostNameVersioning</a></li><li><a href="#QueryParameterVersioning">QueryParameterVersioning</a></li></ul></li><li><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%96%B9%E6%A1%88">自定义版本控制方案</a><ul><li><a href="#%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90">举个栗子</a></li></ul></li></ul>',3),l={href:"http://www.django-rest-framework.org/api-guide/versioning/",title:"官方原文链接",target:"_blank",rel:"noopener noreferrer"},u={id:"版本控制",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#版本控制","aria-hidden":"true"},"#",-1),m={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6",title:"版本控制",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,"API 版本控制允许你更改不同客户端之间的行为。 REST framework 提供了许多不同的版本控制方案。",-1),h=n("p",null,"版本控制由传入的客户端请求决定，可能基于请求 URL 或请求 header。",-1),v=n("p",null,"有几种有效的方法来处理版本控制。非版本化的系统也可能是合适的，特别是如果你正在为超出控制范围的多个客户端的非常长期的系统进行工程设计。",-1),b={id:"使用-rest-framework-进行版本控制",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#使用-rest-framework-进行版本控制","aria-hidden":"true"},"#",-1),_={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E4%BD%BF%E7%94%A8-rest-framework-%E8%BF%9B%E8%A1%8C%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6",title:"使用 REST framework 进行版本控制",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,[e("当启用 API 版本控制时， "),n("code",null,"request.version"),e(" 属性将包含一个对应于传入客户端请求的版本的字符串。")],-1),A=n("p",null,[e("默认情况下，版本控制未启用，"),n("code",null,"request.version"),e(" 将始终返回 "),n("code",null,"None"),e("。")],-1),y={id:"基于版本的变化行为",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#基于版本的变化行为","aria-hidden":"true"},"#",-1),C={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E5%9F%BA%E4%BA%8E%E7%89%88%E6%9C%AC%E7%9A%84%E5%8F%98%E5%8C%96%E8%A1%8C%E4%B8%BA",title:"基于版本的变化行为",target:"_blank",rel:"noopener noreferrer"},P=o(`<p>如何改变 API 的行为取决于你，但你可能通常需要的一个示例是在新版本中切换到不同的序列化样式。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_serializer_class</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>version <span class="token operator">==</span> <span class="token string">&#39;v1&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> AccountSerializerVersion1
    <span class="token keyword">return</span> AccountSerializer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),B={id:"反向解析版本化-api-的-url",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#反向解析版本化-api-的-url","aria-hidden":"true"},"#",-1),T={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E5%8F%8D%E5%90%91%E8%A7%A3%E6%9E%90%E7%89%88%E6%9C%AC%E5%8C%96-api-%E7%9A%84-url",title:"反向解析版本化 API 的 URL",target:"_blank",rel:"noopener noreferrer"},z=o(`<p>REST framework 包含的 <code>reverse</code> 函数与版本控制方案相关联。你需要确保将当前请求包含为关键字参数，如下所示。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>reverse <span class="token keyword">import</span> reverse

reverse<span class="token punctuation">(</span><span class="token string">&#39;bookings-list&#39;</span><span class="token punctuation">,</span> request<span class="token operator">=</span>request<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述功能将应用适合请求版本的任何 URL 转换。例如：</p><ul><li>如果正在使用 <code>NamespacedVersioning</code>，并且 API 版本为 &#39;v1&#39;，则使用的 URL lookup 将为 <code>&#39;v1:bookings-list&#39;</code>，可能会解析为像 <code>http://example.org/v1/bookings/</code> 这样的 URL。</li><li>如果正在使用 <code>QueryParameterVersioning</code>，并且 API 版本为 <code>1.0</code>，则返回的 URL 可能与 <code>http://example.org/bookings/?version=1.0</code> 类似</li></ul>`,4),R={id:"版本化的-api-和超链接序列化类",tabindex:"-1"},V=n("a",{class:"header-anchor",href:"#版本化的-api-和超链接序列化类","aria-hidden":"true"},"#",-1),F={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E7%89%88%E6%9C%AC%E5%8C%96%E7%9A%84-api-%E5%92%8C%E8%B6%85%E9%93%BE%E6%8E%A5%E5%BA%8F%E5%88%97%E5%8C%96%E7%B1%BB",title:"版本化的 API 和超链接序列化类",target:"_blank",rel:"noopener noreferrer"},N=o(`<p>将超链接序列化样式与基于 URL 的版本控制方案一起使用时，请确保将请求作为上下文包含在序列化类中。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    queryset <span class="token operator">=</span> Booking<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    serializer <span class="token operator">=</span> BookingsSerializer<span class="token punctuation">(</span>queryset<span class="token punctuation">,</span> many<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> context<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">:</span> request<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;all_bookings&#39;</span><span class="token punctuation">:</span> serializer<span class="token punctuation">.</span>data<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样做将允许任何返回的 URL 包含合适的版本。</p>`,3),S={id:"配置版本控制方案",tabindex:"-1"},L=n("a",{class:"header-anchor",href:"#配置版本控制方案","aria-hidden":"true"},"#",-1),I={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E9%85%8D%E7%BD%AE%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%96%B9%E6%A1%88",title:"配置版本控制方案",target:"_blank",rel:"noopener noreferrer"},U=o(`<p>版本控制方案由 <code>DEFAULT_VERSIONING_CLASS</code> setting key 定义。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_VERSIONING_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rest_framework.versioning.NamespaceVersioning&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除非明确设置，否则 <code>DEFAULT_VERSIONING_CLASS</code> 的值将为 <code>None</code>。在这种情况下，<code>request.version</code> 属性将始终返回 <code>None</code>。</p><p>你还可以在单个视图上设置版本控制方案。通常，您不需要这样做，因为全局使用单个版本控制方案更有意义。如果你确实需要这样做，请使用 <code>versioning_class</code> 属性。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ProfileList</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    versioning_class <span class="token operator">=</span> versioning<span class="token punctuation">.</span>QueryParameterVersioning
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),K={id:"其他版本设置",tabindex:"-1"},G=n("a",{class:"header-anchor",href:"#其他版本设置","aria-hidden":"true"},"#",-1),H={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC%E8%AE%BE%E7%BD%AE",title:"其他版本设置",target:"_blank",rel:"noopener noreferrer"},D=o(`<p>以下 settings key 也用于控制版本控制：</p><ul><li><code>DEFAULT_VERSION</code>. 当没有版本信息存在时，用于 <code>request.version</code> 的值。默认为 <code>None</code>。</li><li><code>ALLOWED_VERSIONS</code>. 如果设置，则此值将限制版本控制方案可能返回的版本集，如果提供的版本不在此集中，则会引发错误。请注意，用于 <code>DEFAULT_VERSION</code> 设置的值始终被认为是 <code>ALLOWED_VERSIONS</code> 集的一部分（除非它是 <code>None</code>）。默认为 <code>None</code>。</li><li><code>VERSION_PARAM</code>. 应该用于任何版本控制参数的字符串，例如媒体类型或 URL 查询参数。默认为 <code>&#39;version&#39;</code>。</li></ul><p>你还可以通过定义自己的版本控制方案并使用 <code>default_version</code>，<code>allowed_versions</code> 和 <code>version_param</code> 类变量，在每个视图或每个视图集的基础上设置版本控制类以及这三个值。例如，如果你想使用 <code>URLPathVersioning</code>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>versioning <span class="token keyword">import</span> URLPathVersioning
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>views <span class="token keyword">import</span> APIView

<span class="token keyword">class</span> <span class="token class-name">ExampleVersioning</span><span class="token punctuation">(</span>URLPathVersioning<span class="token punctuation">)</span><span class="token punctuation">:</span>
    default_version <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    allowed_versions <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    version_param <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token keyword">class</span> <span class="token class-name">ExampleView</span><span class="token punctuation">(</span>APIVIew<span class="token punctuation">)</span><span class="token punctuation">:</span>
    versioning_class <span class="token operator">=</span> ExampleVersioning
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,5),q={id:"api-参考",tabindex:"-1"},M=n("a",{class:"header-anchor",href:"#api-参考","aria-hidden":"true"},"#",-1),W={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=api-%E5%8F%82%E8%80%83",title:"API 参考",target:"_blank",rel:"noopener noreferrer"},O={id:"acceptheaderversioning",tabindex:"-1"},j=n("a",{class:"header-anchor",href:"#acceptheaderversioning","aria-hidden":"true"},"#",-1),Q={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=acceptheaderversioning",title:"AcceptHeaderVersioning",target:"_blank",rel:"noopener noreferrer"},$=o(`<p>此方案要求客户端将版本指定为 <code>Accept</code> header 中媒体类型的一部分。该版本作为媒体类型参数包含在内，它补充了主要媒体类型。</p><p>这是一个使用 accept header 版本风格的示例 HTTP 请求。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>GET <span class="token operator">/</span>bookings<span class="token operator">/</span> HTTP<span class="token operator">/</span><span class="token number">1.1</span>
Host<span class="token punctuation">:</span> example<span class="token punctuation">.</span>com
Accept<span class="token punctuation">:</span> application<span class="token operator">/</span>json<span class="token punctuation">;</span> version<span class="token operator">=</span><span class="token number">1.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的示例请求中 <code>request.version</code> 属性将返回字符串 <code>&#39;1.0&#39;</code>。</p><p>基于 Accept header 的版本控制通常被认为是最佳实践，尽管其他样式可能更适合你的客户端需求。</p>`,5),X={id:"使用-accept-header-和-vendor-media-type",tabindex:"-1"},Z=n("a",{class:"header-anchor",href:"#使用-accept-header-和-vendor-media-type","aria-hidden":"true"},"#",-1),J={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E4%BD%BF%E7%94%A8-accept-header-%E5%92%8C-vendor-media-type",title:"使用 accept header 和 vendor media type",target:"_blank",rel:"noopener noreferrer"},Y=o(`<p>严格地说，<code>json</code> media type 不能被指定为包含附加参数。如果你正在构建精心指定的公共 API，则可以考虑使用vendor media type。为此，请将你的渲染器配置为使用基于 JSON 的渲染器和自定义 media type：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">BookingsAPIRenderer</span><span class="token punctuation">(</span>JSONRenderer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    media_type <span class="token operator">=</span> <span class="token string">&#39;application/vnd.megacorp.bookings+json&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端请求现在看起来像这样：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>GET <span class="token operator">/</span>bookings<span class="token operator">/</span> HTTP<span class="token operator">/</span><span class="token number">1.1</span>
Host<span class="token punctuation">:</span> example<span class="token punctuation">.</span>com
Accept<span class="token punctuation">:</span> application<span class="token operator">/</span>vnd<span class="token punctuation">.</span>megacorp<span class="token punctuation">.</span>bookings<span class="token operator">+</span>json<span class="token punctuation">;</span> version<span class="token operator">=</span><span class="token number">1.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),nn={id:"urlpathversioning",tabindex:"-1"},en=n("a",{class:"header-anchor",href:"#urlpathversioning","aria-hidden":"true"},"#",-1),an={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=urlpathversioning",title:"URLPathVersioning",target:"_blank",rel:"noopener noreferrer"},sn=o(`<p>该方案要求客户端将版本指定为 URL 路径的一部分。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>GET <span class="token operator">/</span>v1<span class="token operator">/</span>bookings<span class="token operator">/</span> HTTP<span class="token operator">/</span><span class="token number">1.1</span>
Host<span class="token punctuation">:</span> example<span class="token punctuation">.</span>com
Accept<span class="token punctuation">:</span> application<span class="token operator">/</span>json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你的 URL conf 必须包含一个与 <code>&#39;version&#39;</code> 关键字参数相匹配的模式，以便版本控制方案可以使用此信息。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    url<span class="token punctuation">(</span>
        <span class="token string">r&#39;^(?P&lt;version&gt;(v1|v2))/bookings/$&#39;</span><span class="token punctuation">,</span>
        bookings_list<span class="token punctuation">,</span>
        name<span class="token operator">=</span><span class="token string">&#39;bookings-list&#39;</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    url<span class="token punctuation">(</span>
        <span class="token string">r&#39;^(?P&lt;version&gt;(v1|v2))/bookings/(?P&lt;pk&gt;[0-9]+)/$&#39;</span><span class="token punctuation">,</span>
        bookings_detail<span class="token punctuation">,</span>
        name<span class="token operator">=</span><span class="token string">&#39;bookings-detail&#39;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),on={id:"namespaceversioning",tabindex:"-1"},tn=n("a",{class:"header-anchor",href:"#namespaceversioning","aria-hidden":"true"},"#",-1),rn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=namespaceversioning",title:"NamespaceVersioning",target:"_blank",rel:"noopener noreferrer"},pn=o(`<p>对于客户端来说，这个方案与 <code>URLPathVersioning</code> 相同。唯一的区别是，它是如何在 Django 应用程序中配置的，因为它使用 URL 命名空间而不是 URL 关键字参数。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>GET <span class="token operator">/</span>v1<span class="token operator">/</span>something<span class="token operator">/</span> HTTP<span class="token operator">/</span><span class="token number">1.1</span>
Host<span class="token punctuation">:</span> example<span class="token punctuation">.</span>com
Accept<span class="token punctuation">:</span> application<span class="token operator">/</span>json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用此方案，<code>request.version</code> 属性是根据与传入请求路径匹配的 <code>namespace</code> 确定的。</p><p>在下面的例子中，我们给出了一组视图两个不同的可能的 URL 前缀，每个前缀在不同的命名空间下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># bookings/urls.py</span>
urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^$&#39;</span><span class="token punctuation">,</span> bookings_list<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;bookings-list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^(?P&lt;pk&gt;[0-9]+)/$&#39;</span><span class="token punctuation">,</span> bookings_detail<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;bookings-detail&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span>

<span class="token comment"># urls.py</span>
urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^v1/bookings/&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">&#39;bookings.urls&#39;</span><span class="token punctuation">,</span> namespace<span class="token operator">=</span><span class="token string">&#39;v1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^v2/bookings/&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">&#39;bookings.urls&#39;</span><span class="token punctuation">,</span> namespace<span class="token operator">=</span><span class="token string">&#39;v2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你只需要简单的版本控制方案，那么 <code>URLPathVersioning</code> 和 <code>NamespaceVersioning</code> 都是可以的。 <code>URLPathVersioning</code>方法可能更适合于小型项目，<code>NamespaceVersioning</code> 可能更容易管理大型项目。</p>`,6),cn={id:"hostnameversioning",tabindex:"-1"},dn=n("a",{class:"header-anchor",href:"#hostnameversioning","aria-hidden":"true"},"#",-1),ln={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=hostnameversioning",title:"HostNameVersioning",target:"_blank",rel:"noopener noreferrer"},un=o(`<p>hostname 版本控制方案要求客户端将请求的版本指定为 URL 中 hostname 的一部分。</p><p>例如，以下是对 <code>http://v1.example.com/bookings/</code> URL 的 HTTP 请求：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>GET <span class="token operator">/</span>bookings<span class="token operator">/</span> HTTP<span class="token operator">/</span><span class="token number">1.1</span>
Host<span class="token punctuation">:</span> v1<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com
Accept<span class="token punctuation">:</span> application<span class="token operator">/</span>json 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，这个实现期望 hostname 匹配这个简单的正则表达式：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span>\\<span class="token punctuation">.</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>\\<span class="token punctuation">.</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请注意，第一组用括号括起来，表示这是 hostname 的匹配部分。</p><p><code>HostNameVersioning</code> 方案在调试模式下可能会很笨拙，因为你通常会访问诸如 <code>127.0.0.1</code> 的原始 IP 地址。</p><p>如果你有要求根据版本将传入请求路由到不同的服务器，那么基于 hostname 的版本控制就会特别有用，因为你可以为不同的 API 版本配置不同的 DNS 记录。</p>`,8),kn={id:"queryparameterversioning",tabindex:"-1"},mn=n("a",{class:"header-anchor",href:"#queryparameterversioning","aria-hidden":"true"},"#",-1),fn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=queryparameterversioning",title:"QueryParameterVersioning",target:"_blank",rel:"noopener noreferrer"},hn=o(`<p>该方案是一种简单的风格，其中包含版本作为 URL 中的查询参数。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>GET <span class="token operator">/</span>something<span class="token operator">/</span>?version<span class="token operator">=</span><span class="token number">0.1</span> HTTP<span class="token operator">/</span><span class="token number">1.1</span>
Host<span class="token punctuation">:</span> example<span class="token punctuation">.</span>com
Accept<span class="token punctuation">:</span> application<span class="token operator">/</span>json 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,3),vn={id:"自定义版本控制方案",tabindex:"-1"},bn=n("a",{class:"header-anchor",href:"#自定义版本控制方案","aria-hidden":"true"},"#",-1),gn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E8%87%AA%E5%AE%9A%E4%B9%89%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%96%B9%E6%A1%88",title:"自定义版本控制方案",target:"_blank",rel:"noopener noreferrer"},_n=n("p",null,[e("要实现自定义版本控制方案，请继承 "),n("code",null,"BaseVersioning"),e("并覆盖 "),n("code",null,".determine_version"),e(" 方法。")],-1),En={id:"举个栗子",tabindex:"-1"},An=n("a",{class:"header-anchor",href:"#举个栗子","aria-hidden":"true"},"#",-1),yn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/f77c1f67-5d8b-46d6-bc82-1c5085ea7482/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_f77c1f67-5d8b-46d6-bc82-1c5085ea7482#/drf/versioning?id=%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90",title:"举个栗子",target:"_blank",rel:"noopener noreferrer"},xn=o(`<p>以下示例使用自定义的 <code>X-API-Version</code> header 来确定所请求的版本。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">XAPIVersionScheme</span><span class="token punctuation">(</span>versioning<span class="token punctuation">.</span>BaseVersioning<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">determine_version</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> request<span class="token punctuation">.</span>META<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;HTTP_X_API_VERSION&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你的版本控制方案基于请求 URL，则还需要更改版本化 URL 的确定方式。为了做到这一点，你应该重写类的 <code>.reverse()</code>方法。有关示例，请参阅源代码。</p><hr>`,4);function Cn(Pn,Bn){const a=r("ExternalLinkIcon");return i(),p("div",null,[d,n("blockquote",null,[n("p",null,[n("a",l,[e("官方原文链接"),s(a)])])]),n("h1",u,[k,e(),n("a",m,[e("版本控制"),s(a)])]),f,h,v,n("h2",b,[g,e(),n("a",_,[e("使用 REST framework 进行版本控制"),s(a)])]),E,A,n("h4",y,[x,e(),n("a",C,[e("基于版本的变化行为"),s(a)])]),P,n("h4",B,[w,e(),n("a",T,[e("反向解析版本化 API 的 URL"),s(a)])]),z,n("h4",R,[V,e(),n("a",F,[e("版本化的 API 和超链接序列化类"),s(a)])]),N,n("h2",S,[L,e(),n("a",I,[e("配置版本控制方案"),s(a)])]),U,n("h4",K,[G,e(),n("a",H,[e("其他版本设置"),s(a)])]),D,n("h1",q,[M,e(),n("a",W,[e("API 参考"),s(a)])]),n("h2",O,[j,e(),n("a",Q,[e("AcceptHeaderVersioning"),s(a)])]),$,n("h4",X,[Z,e(),n("a",J,[e("使用 accept header 和 vendor media type"),s(a)])]),Y,n("h2",nn,[en,e(),n("a",an,[e("URLPathVersioning"),s(a)])]),sn,n("h2",on,[tn,e(),n("a",rn,[e("NamespaceVersioning"),s(a)])]),pn,n("h2",cn,[dn,e(),n("a",ln,[e("HostNameVersioning"),s(a)])]),un,n("h2",kn,[mn,e(),n("a",fn,[e("QueryParameterVersioning"),s(a)])]),hn,n("h1",vn,[bn,e(),n("a",gn,[e("自定义版本控制方案"),s(a)])]),_n,n("h2",En,[An,e(),n("a",yn,[e("举个栗子"),s(a)])]),xn])}const zn=t(c,[["render",Cn],["__file","Rest-framework专栏讲解(二十四)- 版本控制.html.vue"]]);export{zn as default};
