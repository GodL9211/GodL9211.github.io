import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c as r,a as n,b as a,e as s,f as t}from"./app-967d79b2.js";const c="/assets/image_jWsB0ORKZL-761e6a96.png",l="/assets/image_SyVfHQV9nV-935cbbcd.png",d={},u=t('<h1 id="rest-framework专栏讲解-二十三-pagination" tabindex="-1"><a class="header-anchor" href="#rest-framework专栏讲解-二十三-pagination" aria-hidden="true">#</a> Rest-framework专栏讲解(二十三)：Pagination</h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#%E5%88%86%E9%A1%B5">分页</a><ul><li><a href="#%E8%AE%BE%E7%BD%AE%E5%88%86%E9%A1%B5%E6%A0%B7%E5%BC%8F">设置分页样式</a></li><li><a href="#%E4%BF%AE%E6%94%B9%E5%88%86%E9%A1%B5%E6%A0%B7%E5%BC%8F">修改分页样式</a></li></ul></li><li><a href="#%E5%88%86%E9%A1%B5API-%E5%8F%82%E8%80%83">分页API 参考</a><ul><li><a href="#PageNumberPagination">PageNumberPagination</a><ul><li><a href="#%E8%AF%B7%E6%B1%82">请求</a></li><li><a href="#%E5%93%8D%E5%BA%94">响应</a></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li><li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a></li></ul></li><li><a href="#LimitOffsetPagination">LimitOffsetPagination</a><ul><li><a href="#%E8%AF%B7%E6%B1%82">请求</a></li><li><a href="#%E5%93%8D%E5%BA%94">响应</a></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li><li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a></li></ul></li><li><a href="#CursorPagination">CursorPagination</a><ul><li><a href="#%E7%BB%86%E8%8A%82%E5%92%8C%E9%99%90%E5%88%B6">细节和限制</a></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li><li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a></li></ul></li></ul></li><li><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E9%A1%B5%E6%A0%B7%E5%BC%8F">自定义分页样式</a><ul><li><a href="#%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90">举个栗子</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E4%BD%A0%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E9%A1%B5%E7%B1%BB">使用你的自定义分页类</a></li><li><a href="#%E5%88%86%E9%A1%B5%E5%92%8C%E6%A8%A1%E5%BC%8F">分页和模式</a></li></ul></li><li><a href="#HTML-%E5%88%86%E9%A1%B5%E6%8E%A7%E4%BB%B6">HTML 分页控件</a><ul><li><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6">自定义控件</a><ul><li><a href="#%E4%BD%8E%E7%BA%A7-API">低级 API</a></li></ul></li></ul></li><li><a href="#%E6%89%A9%E5%B1%95">扩展</a></li></ul><hr>',4),h={href:"http://www.django-rest-framework.org/api-guide/pagination/",title:"官方原文链接",target:"_blank",rel:"noopener noreferrer"},_={id:"分页",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#分页","aria-hidden":"true"},"#",-1),k={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E5%88%86%E9%A1%B5",title:"分页",target:"_blank",rel:"noopener noreferrer"},m=t("<p>REST framework 包含对可定制分页样式的支持。这使你可以将较大的结果集分成单独的数据页面。</p><p>分页 API 支持：</p><ul><li>以分页链接的形式作为响应内容的一部分。</li><li>以分页链接的形式包含在响应的 header 中，如 <code>Content-Range</code> 或 <code>Link</code>.</li></ul><p>内置的样式目前是以分页链接的形式作为响应内容的一部分。使用可浏览的 API 时，此样式更易于访问。</p><p>分页仅在你使用通用视图或视图集时自动执行。如果你使用的是常规 <code>APIView</code>，则需要自己调用分页 API 以确保返回分页响应。示例请参阅 <code>mixins.ListModelMixin</code> 和 <code>generics.GenericAPIView</code> 类的源代码。</p><p>可以通过将分页类设置为 <code>None</code>，关闭分页。</p>",6),f={id:"设置分页样式",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#设置分页样式","aria-hidden":"true"},"#",-1),b={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E8%AE%BE%E7%BD%AE%E5%88%86%E9%A1%B5%E6%A0%B7%E5%BC%8F",title:"设置分页样式",target:"_blank",rel:"noopener noreferrer"},v=t(`<p>分页样式可以使用 <code>DEFAULT_PAGINATION_CLASS</code> 和 <code>PAGE_SIZE</code>在settings文件中全局设置。例如，要使用内置的 <code>limit/offset 分页</code>，你可以这样做：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PAGINATION_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rest_framework.pagination.LimitOffsetPagination&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;PAGE_SIZE&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，你需要设置分页类和应使用的页面大小。默认情况下，<code>DEFAULT_PAGINATION_CLASS</code> 和 <code>PAGE_SIZE</code> 都是 <code>None</code>。</p><p>你还可以使用 <code>pagination_class</code> 属性在单个视图上设置分页类。通常，你希望在整个 API 中使用相同的分页样式，但你可能希望在每个视图的基础上更改分页的各个方面，例如默认或最大页面大小。</p>`,4),A={id:"修改分页样式",tabindex:"-1"},P=n("a",{class:"header-anchor",href:"#修改分页样式","aria-hidden":"true"},"#",-1),B={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E4%BF%AE%E6%94%B9%E5%88%86%E9%A1%B5%E6%A0%B7%E5%BC%8F",title:"修改分页样式",target:"_blank",rel:"noopener noreferrer"},y=t(`<p>如果要修改分页样式的特定方面，则需要继承其中一个分页类，并设置要更改的属性。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">LargeResultsSetPagination</span><span class="token punctuation">(</span>PageNumberPagination<span class="token punctuation">)</span><span class="token punctuation">:</span>
    page_size <span class="token operator">=</span> <span class="token number">1000</span>
    page_size_query_param <span class="token operator">=</span> <span class="token string">&#39;page_size&#39;</span>
    max_page_size <span class="token operator">=</span> <span class="token number">10000</span>

<span class="token keyword">class</span> <span class="token class-name">StandardResultsSetPagination</span><span class="token punctuation">(</span>PageNumberPagination<span class="token punctuation">)</span><span class="token punctuation">:</span>
    page_size <span class="token operator">=</span> <span class="token number">100</span>
    page_size_query_param <span class="token operator">=</span> <span class="token string">&#39;page_size&#39;</span>
    max_page_size <span class="token operator">=</span> <span class="token number">1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，你可以使用 <code>.pagination_class</code> 属性将新样式应用于视图：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">BillingRecordsView</span><span class="token punctuation">(</span>generics<span class="token punctuation">.</span>ListAPIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    queryset <span class="token operator">=</span> Billing<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    serializer_class <span class="token operator">=</span> BillingRecordsSerializer
    pagination_class <span class="token operator">=</span> LargeResultsSetPagination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用 <code>DEFAULT_PAGINATION_CLASS</code> 在settings文件中配置以全局应用样式。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PAGINATION_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;apps.core.pagination.StandardResultsSetPagination&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),x={id:"分页api-参考",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#分页api-参考","aria-hidden":"true"},"#",-1),L={href:"http://drf.jiuyou.info/#/drf/pagination?id=api-%E5%8F%82%E8%80%83",title:"API 参考",target:"_blank",rel:"noopener noreferrer"},S={id:"pagenumberpagination",tabindex:"-1"},T=n("a",{class:"header-anchor",href:"#pagenumberpagination","aria-hidden":"true"},"#",-1),N={href:"http://drf.jiuyou.info/#/drf/pagination?id=pagenumberpagination",title:"PageNumberPagination",target:"_blank",rel:"noopener noreferrer"},q=t(`<p>此分页样式在请求查询参数中接受一个页码值。</p><h4 id="请求" tabindex="-1"><a class="header-anchor" href="#请求" aria-hidden="true">#</a> 请求</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>GET https<span class="token punctuation">:</span><span class="token operator">//</span>api<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token operator">/</span>accounts<span class="token operator">/</span>?page<span class="token operator">=</span><span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="响应" tabindex="-1"><a class="header-anchor" href="#响应" aria-hidden="true">#</a> 响应</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>HTTP <span class="token number">200</span> OK
<span class="token punctuation">{</span>
    <span class="token string">&quot;count&quot;</span><span class="token punctuation">:</span> <span class="token number">1023</span><span class="token punctuation">,</span>
    <span class="token string">&quot;next&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;https://api.example.org/accounts/?page=5&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;previous&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;https://api.example.org/accounts/?page=3&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;results&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
       …
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h4><p>如果要全局启用 <code>PageNumberPagination</code> 样式，请使用以下配置，并根据需要设置 <code>PAGE_SIZE</code>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PAGINATION_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rest_framework.pagination.PageNumberPagination&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;PAGE_SIZE&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果使用的是 <code>GenericAPIView</code> 的子类，还可以设置 <code>pagination_class</code> 属性以在每个视图的基础上选择 <code>PageNumberPagination</code>。</p><h4 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h4><p><code>PageNumberPagination</code> 类包含一些可以被覆盖以修改分页样式的属性。</p><p>要设置这些属性，你应该继承 <code>PageNumberPagination</code> 类，然后像上面那样启用你的自定义分页类。</p><ul><li><code>django_paginator_class</code> - 要使用的 Django Paginator 类。默认是 <code>django.core.paginator.Paginator</code>，对于大多数用例来说应该没问题。</li><li><code>page_size</code> - 指定页面大小的数字值。如果设置，则会覆盖 <code>PAGE_SIZE</code> setting。默认值与 <code>PAGE_SIZE</code> setting key 相同。</li><li><code>page_query_param</code> - 一个字符串值，指定用于分页控件的查询参数的名称。</li><li><code>page_size_query_param</code> - 一个字符串值，指定查询参数的名称，允许客户端根据每个请求设置页面大小。默认为 <code>None</code>，表示客户端可能无法控制所请求的页面大小。</li><li><code>max_page_size</code> - 一个数字值，表示允许的最大页面大小。该属性仅在 <code>page_size_query_param</code> 也被设置时有效。</li><li><code>last_page_strings</code> - 字符串列表或元组，用于指定可能与 <code>page_query_param</code> 一起使用的值，用以请求集合中的最终页面。默认为 <code>(&#39;last&#39;,)</code></li><li><code>template</code> - 在可浏览 API 中渲染分页控件时使用的模板的名称。可能会被覆盖以修改渲染样式，或设置为 <code>None</code> 以完全禁用 HTML 分页控件。默认为 <code>&quot;rest_framework/pagination/numbers.html&quot;</code>。</li></ul>`,13),F={id:"limitoffsetpagination",tabindex:"-1"},C=n("a",{class:"header-anchor",href:"#limitoffsetpagination","aria-hidden":"true"},"#",-1),j={href:"http://drf.jiuyou.info/#/drf/pagination?id=limitoffsetpagination",title:"LimitOffsetPagination",target:"_blank",rel:"noopener noreferrer"},w=t(`<p>这种分页样式反映了查找多个数据库记录时使用的语法。客户端包含 “limit” 和 “offset” 查询参数。limit 表示要返回的 item 的最大数量，并且等同于其他样式中的 <code>page_size</code>。offset 指定查询的起始位置与完整的未分类 item 集的关系。</p><h4 id="请求-1" tabindex="-1"><a class="header-anchor" href="#请求-1" aria-hidden="true">#</a> 请求</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>GET https<span class="token punctuation">:</span><span class="token operator">//</span>api<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token operator">/</span>accounts<span class="token operator">/</span>?limit<span class="token operator">=</span><span class="token number">100</span><span class="token operator">&amp;</span>offset<span class="token operator">=</span><span class="token number">400</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="响应-1" tabindex="-1"><a class="header-anchor" href="#响应-1" aria-hidden="true">#</a> 响应</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>HTTP <span class="token number">200</span> OK
<span class="token punctuation">{</span>
    <span class="token string">&quot;count&quot;</span><span class="token punctuation">:</span> <span class="token number">1023</span>
    <span class="token string">&quot;next&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;https://api.example.org/accounts/?limit=100&amp;offset=500&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;previous&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;https://api.example.org/accounts/?limit=100&amp;offset=300&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;results&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
       …
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置-1" tabindex="-1"><a class="header-anchor" href="#配置-1" aria-hidden="true">#</a> 配置</h4><p>若是你需要全局性启用 <code>LimitOffsetPagination</code> 样式, 请使用以下配置：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PAGINATION_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rest_framework.pagination.LimitOffsetPagination&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者，你也可以设置一个 <code>PAGE_SIZE</code> 键。如果使用了 <code>PAGE_SIZE</code> 参数，则 <code>limit</code> 查询参数将是可选的，并且可能会被客户端忽略。</p><p>如果使用的是 <code>GenericAPIView</code> 子类，还可以设置 <code>pagination_class</code> 属性以基于每个视图选择 <code>LimitOffsetPagination</code>。</p><h4 id="注意事项-1" tabindex="-1"><a class="header-anchor" href="#注意事项-1" aria-hidden="true">#</a> 注意事项</h4><p><code>LimitOffsetPagination</code> 类包含一些可以被覆盖以修改分页样式的属性。</p><p>要设置这些属性，应该继承 <code>LimitOffsetPagination</code> 类，然后像上面那样启用你的自定义分页类。</p><ul><li><code>default_limit</code> - 一个数字值，指定客户端在查询参数中未提供的 limit 。默认值与 <code>PAGE_SIZE</code> setting key 相同。</li><li><code>limit_query_param</code> - 一个字符串值，指示 “limit” 查询参数的名称。默认为 <code>&#39;limit&#39;</code>。</li><li><code>offset_query_param</code> - 一个字符串值，指示 “offset” 查询参数的名称。默认为 <code>&#39;offset&#39;</code>。</li><li><code>max_limit</code> - 一个数字值，表示客户端可以要求的最大允许 limit。默认为 <code>None</code>。</li><li><code>template</code> - 在可浏览 API 中渲染分页控件时使用的模板的名称。可能会被覆盖以修改渲染样式，或设置为 <code>None</code> 以完全禁用 HTML 分页控件。默认为 <code>&quot;rest_framework/pagination/numbers.html&quot;</code>。</li></ul>`,14),R={id:"cursorpagination",tabindex:"-1"},O=n("a",{class:"header-anchor",href:"#cursorpagination","aria-hidden":"true"},"#",-1),D={href:"http://drf.jiuyou.info/#/drf/pagination?id=cursorpagination",title:"CursorPagination",target:"_blank",rel:"noopener noreferrer"},G=n("p",null,"基于游标的分页提供了一个不透明的 “游标” 指示器，客户端可以使用该指示器来翻阅结果集。此分页样式仅提供前向和反向控件，并且不允许客户端导航到任意位置。",-1),M=n("p",null,"基于游标的分页需要在结果集中存在唯一的，不变的 item 顺序。这种排序通常可以是记录上的创建时间戳，因为这确保了排序的一致性。",-1),z=n("p",null,"基于游标的分页比其他方案更复杂。它还要求结果集渲染固定顺序，并且不允许客户端任意索引结果集。但它确实提供了以下好处：",-1),H=n("ul",null,[n("li",null,[a("提供一致的分页视图。正确使用时 "),n("code",null,"CursorPagination"),a(" 确保客户端在分页时不会看到同一个 item，即使在分页过程中其他客户端正在插入新 item。")]),n("li",null,"支持使用非常大的数据集。使用极大数据集分页时，使用基于偏移量的分页样式可能会变得效率低下或无法使用。基于游标的分页方案具有固定时间属性，并且不会随着数据集大小的增加而减慢。")],-1),Z={id:"细节和限制",tabindex:"-1"},V=n("a",{class:"header-anchor",href:"#细节和限制","aria-hidden":"true"},"#",-1),U={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E7%BB%86%E8%8A%82%E5%92%8C%E9%99%90%E5%88%B6",title:"细节和限制",target:"_blank",rel:"noopener noreferrer"},K=t("<p>正确使用基于游标的分页需要稍微注意细节。你需要考虑希望将该方案应用于何种顺序。默认是按 <code>&quot;-created&quot;</code> 排序。这假设在模型实例上必须有一个 “created” 时间戳字段，并且会渲染一个 “时间轴” 样式分页视图，其中最近添加的 item 是第一个。</p><p>你可以通过重写分页类上的 <code>&#39;ordering&#39;</code> 属性或者将 <code>OrderingFilter</code> 过滤器类与 <code>CursorPagination</code> 一起使用来修改排序。与 <code>OrderingFilter</code> 一起使用时，你应该考虑限制用户可以排序的字段。</p><p>正确使用游标分页应该有一个满足以下条件的排序字段：</p>",3),W=n("li",null,"在创建时应该是一个不变的值，例如时间戳，slug，或其他只设置一次的字段。",-1),Q=n("li",null,"应该是独特的，或几乎独一无二的。毫秒精度时间戳就是一个很好的例子。这种游标分页的实现使用了一种智能的 “位置 + 偏移” 风格，允许它正确地支持非严格唯一的值作为排序。",-1),J=n("li",null,"应该是可以强制为字符串的非空值。",-1),X={href:"https://gist.github.com/keturn/8bc88525a183fd41c73ffb729b8865be#file-fpcursorpagination-py",title:"使用小数来限定精度的示例",target:"_blank",rel:"noopener noreferrer"},Y=n("li",null,"该字段应该有一个数据库索引。",-1),$=t(`<p>使用不满足这些约束条件的排序字段通常仍然有效，但是你将失去游标分页的一些好处。</p><h4 id="配置-2" tabindex="-1"><a class="header-anchor" href="#配置-2" aria-hidden="true">#</a> 配置</h4><p>要全局启用 <code>CursorPagination</code> 样式, 请使用以下配置, <code>PAGE_SIZE</code> 根据需要进行修改：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PAGINATION_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rest_framework.pagination.CursorPagination&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;PAGE_SIZE&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果使用的是 <code>GenericAPIView</code> 子类，还可以设置 <code>pagination_class</code> 属性以基于每个视图选择 <code>CursorPagination</code>。</p><h4 id="注意事项-2" tabindex="-1"><a class="header-anchor" href="#注意事项-2" aria-hidden="true">#</a> 注意事项</h4><p><code>CursorPagination</code> 类包含一些可以被覆盖以修改分页样式的属性。</p><p>要设置这些属性，你应该继承 <code>CursorPagination</code> 类，然后像上面那样启用你的自定义分页类。</p><ul><li><code>page_size</code> = 指定页面大小的数字值。如果设置，则会覆盖 <code>PAGE_SIZE</code> 设置。默认值与 <code>PAGE_SIZE</code> setting key 相同。</li><li><code>cursor_query_param</code> = 一个字符串值，指定 “游标” 查询参数的名称。默认为 <code>&#39;cursor&#39;</code>.</li><li><code>ordering</code> = 这应该是一个字符串或字符串列表，指定将应用基于游标的分页的字段。例如： <code>ordering = &#39;slug&#39;</code>。默认为 <code>-created</code>。该值也可以通过在视图上使用 <code>OrderingFilter</code> 来覆盖。</li><li><code>template</code> = 在可浏览 API 中渲染分页控件时使用的模板的名称。可能会被覆盖以修改渲染样式，或设置为 <code>None</code> 以完全禁用 HTML 分页控件。默认为 <code>&quot;rest_framework/pagination/previous_and_next.html&quot;</code>。</li></ul>`,9),nn={id:"自定义分页样式",tabindex:"-1"},an=n("a",{class:"header-anchor",href:"#自定义分页样式","aria-hidden":"true"},"#",-1),en={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E9%A1%B5%E6%A0%B7%E5%BC%8F",title:"自定义分页样式",target:"_blank",rel:"noopener noreferrer"},sn=t("<p>要创建自定义分页序列化类，你应该继承 <code>pagination.BasePagination</code> 并覆盖 <code>paginate_queryset(self, queryset, request, view=None)</code> 和 <code>get_paginated_response(self, data)</code> 方法：</p><ul><li><code>paginate_queryset</code> 方法被传递给初始查询集，并且应该返回一个只包含请求页面中的数据的可迭代对象。</li><li><code>get_paginated_response</code> 方法传递序列化的页面数据，并返回一个 <code>Response</code> 实例。</li></ul><p>请注意，<code>paginate_queryset</code> 方法可以在分页实例上设置状态，而后 <code>get_paginated_response</code> 方法可以使用它。</p>",3),tn={id:"举个栗子",tabindex:"-1"},on=n("a",{class:"header-anchor",href:"#举个栗子","aria-hidden":"true"},"#",-1),pn={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90",title:"举个栗子",target:"_blank",rel:"noopener noreferrer"},rn=t(`<p>假设我们想用一个修改后的格式替换默认的分页输出样式，该样式包含嵌套的 “links” key（包含上一页，下一页链接）。我们可以像这样指定一个自定义分页类：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">CustomPagination</span><span class="token punctuation">(</span>pagination<span class="token punctuation">.</span>PageNumberPagination<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">get_paginated_response</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token string">&#39;links&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;next&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>get_next_link<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&#39;previous&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>get_previous_link<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&#39;count&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>paginator<span class="token punctuation">.</span>count<span class="token punctuation">,</span>
            <span class="token string">&#39;results&#39;</span><span class="token punctuation">:</span> data
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们需要在配置中设置自定义类：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PAGINATION_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;my_project.apps.core.pagination.CustomPagination&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;PAGE_SIZE&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，如果你关心如何在可浏览的 API 中显示键的顺序，则可以在构建分页响应的主体时选择使用 <code>OrderedDict</code>，这是可选的。</p>`,5),cn={id:"使用你的自定义分页类",tabindex:"-1"},ln=n("a",{class:"header-anchor",href:"#使用你的自定义分页类","aria-hidden":"true"},"#",-1),dn={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E4%BD%BF%E7%94%A8%E4%BD%A0%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E9%A1%B5%E7%B1%BB",title:"使用你的自定义分页类",target:"_blank",rel:"noopener noreferrer"},un=t(`<p>要默认使用你的自定义分页类，请修改 <code>DEFAULT_PAGINATION_CLASS</code>设置：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PAGINATION_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;my_project.apps.core.pagination.LinkHeaderPagination&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;PAGE_SIZE&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>列表端点的 API 响应现在将包含一个 <code>Link</code> header，而不是将分页链接包含为响应主体的一部分。 </p><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',4),hn={id:"分页和模式",tabindex:"-1"},_n=n("a",{class:"header-anchor",href:"#分页和模式","aria-hidden":"true"},"#",-1),gn={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E5%88%86%E9%A1%B5%E5%92%8C%E6%A8%A1%E5%BC%8F",title:"分页和模式",target:"_blank",rel:"noopener noreferrer"},kn=n("p",null,[a("通过实现 "),n("code",null,"get_schema_fields()"),a(" 方法，你还可以使分页控件可用于 REST framework 提供的模式自动生成。此方法应具有以下签名：")],-1),mn=n("p",null,[n("code",null,"get_schema_fields(self, view)")],-1),fn=n("p",null,[a("该方法应该返回一个 "),n("code",null,"coreapi.Field"),a(" 实例列表。")],-1),En=n("figure",null,[n("img",{src:l,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),bn={id:"html-分页控件",tabindex:"-1"},vn=n("a",{class:"header-anchor",href:"#html-分页控件","aria-hidden":"true"},"#",-1),An={href:"http://drf.jiuyou.info/#/drf/pagination?id=html-%E5%88%86%E9%A1%B5%E6%8E%A7%E4%BB%B6",title:"HTML 分页控件",target:"_blank",rel:"noopener noreferrer"},Pn=n("p",null,[a("默认情况下，使用分页类将导致 HTML 分页控件显示在可浏览的 API 中。有两种内置显示样式。 "),n("code",null,"PageNumberPagination"),a(" 和 "),n("code",null,"LimitOffsetPagination"),a(" 类显示包含上一页和下一页控件的页码列表。 "),n("code",null,"CursorPagination"),a(" 类显示更简单的样式，只显示上一页和下一页控件。")],-1),Bn={id:"自定义控件",tabindex:"-1"},yn=n("a",{class:"header-anchor",href:"#自定义控件","aria-hidden":"true"},"#",-1),xn={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6",title:"自定义控件",target:"_blank",rel:"noopener noreferrer"},In=n("p",null,"你可以覆盖渲染 HTML 分页控件的模板。这两种内置式样是：",-1),Ln=n("ul",null,[n("li",null,[n("code",null,"rest_framework/pagination/numbers.html")]),n("li",null,[n("code",null,"rest_framework/pagination/previous_and_next.html")])],-1),Sn=n("p",null,"在全局模板目录中提供具有这些路径的模板将覆盖相关分页类的默认渲染。",-1),Tn=n("p",null,[a("或者，你可以通过在现有类的子类上完全禁用 HTML 分页控件，将 "),n("code",null,"template=None"),a(" 设置为该类的属性。然后，你需要配置你的 "),n("code",null,"DEFAULT_PAGINATION_CLASS"),a(" setting key，以将你的自定义类用作默认分页样式。")],-1),Nn={id:"低级-api",tabindex:"-1"},qn=n("a",{class:"header-anchor",href:"#低级-api","aria-hidden":"true"},"#",-1),Fn={href:"http://drf.jiuyou.info/#/drf/pagination?id=%E4%BD%8E%E7%BA%A7-api",title:"低级 API",target:"_blank",rel:"noopener noreferrer"},Cn=t('<p>用于确定分页类是否应显示控件的低级 API 作为分页实例上的 <code>display_page_controls</code> 属性公开。如果需要显示HTML 分页控件，自定义分页类应该在 <code>paginate_queryset</code> 方法中设置为 <code>True</code> 。</p><p><code>.to_html()</code> 和 <code>.get_html_context()</code> 方法也可以在自定义分页类中重写，以便进一步自定义控件的渲染方式。</p><h1 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展" aria-hidden="true">#</a> 扩展</h1>',3),jn=n("p",null,[n("code",null,"DRF-extensions")],-1),wn={href:"https://link.juejin.cn/?target=https://chibisov.github.io/drf-extensions/docs/",title:"DRF-extensions",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://link.juejin.cn/?target=https://chibisov.github.io/drf-extensions/docs/",title:" 软件包",target:"_blank",rel:"noopener noreferrer"},On=n("code",null,"PaginateByMaxMixinmixin",-1),Dn=n("code",null,"?page_size=max",-1),Gn=n("p",null,[n("code",null,"drf-proxy-pagination")],-1),Mn={href:"https://link.juejin.cn/?target=https://github.com/tuffnatty/drf-proxy-pagination",title:"drf-proxy-pagination",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://link.juejin.cn/?target=https://github.com/tuffnatty/drf-proxy-pagination",title:" 软件包",target:"_blank",rel:"noopener noreferrer"},Hn=n("code",null,"ProxyPagination",-1),Zn=n("p",null,[n("code",null,"link-header-pagination")],-1),Vn={href:"https://link.juejin.cn/?target=https://github.com/tbeadle/django-rest-framework-link-header-pagination",title:"django-rest-framework-link-header-pagination",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://link.juejin.cn/?target=https://github.com/tbeadle/django-rest-framework-link-header-pagination",title:" 软件包",target:"_blank",rel:"noopener noreferrer"},Kn=n("code",null,"LinkHeaderPagination",-1);function Wn(Qn,Jn){const e=o("ExternalLinkIcon");return p(),r("div",null,[u,n("blockquote",null,[n("p",null,[n("a",h,[a("官方原文链接"),s(e)])])]),n("h1",_,[g,a(),n("a",k,[a("分页"),s(e)])]),m,n("h2",f,[E,a(),n("a",b,[a("设置分页样式"),s(e)])]),v,n("h2",A,[P,a(),n("a",B,[a("修改分页样式"),s(e)])]),y,n("h1",x,[I,a(" 分页"),n("a",L,[a("API 参考"),s(e)])]),n("h2",S,[T,a(),n("a",N,[a("PageNumberPagination"),s(e)])]),q,n("h2",F,[C,a(),n("a",j,[a("LimitOffsetPagination"),s(e)])]),w,n("h2",R,[O,a(),n("a",D,[a("CursorPagination"),s(e)])]),G,M,z,H,n("h4",Z,[V,a(),n("a",U,[a("细节和限制"),s(e)])]),K,n("ul",null,[W,Q,J,n("li",null,[a("不应该是一个 float。精度错误很容易导致错误的结果。提示：改用小数。（如果你已经有一个 float 字段并且必须对其进行分页，则可以在此处找到"),n("a",X,[a("使用小数来限定精度的示例"),s(e)]),a("。）")]),Y]),$,n("h1",nn,[an,a(),n("a",en,[a("自定义分页样式"),s(e)])]),sn,n("h2",tn,[on,a(),n("a",pn,[a("举个栗子"),s(e)])]),rn,n("h2",cn,[ln,a(),n("a",dn,[a("使用你的自定义分页类"),s(e)])]),un,n("h2",hn,[_n,a(),n("a",gn,[a("分页和模式"),s(e)])]),kn,mn,fn,En,n("h1",bn,[vn,a(),n("a",An,[a("HTML 分页控件"),s(e)])]),Pn,n("h2",Bn,[yn,a(),n("a",xn,[a("自定义控件"),s(e)])]),In,Ln,Sn,Tn,n("h4",Nn,[qn,a(),n("a",Fn,[a("低级 API"),s(e)])]),Cn,n("ul",null,[n("li",null,[jn,n("p",null,[a("该 "),n("a",wn,[a("DRF-extensions"),s(e)]),n("a",Rn,[a(" 软件包"),s(e)]),a("包括一个 "),On,a(" 类, 该类允许您的 API 客户端指定 "),Dn,a(" 以获得最大允许页面大小")])]),n("li",null,[Gn,n("p",null,[a("该 "),n("a",Mn,[a("drf-proxy-pagination"),s(e)]),n("a",zn,[a(" 软件包"),s(e)]),a("包括一个 "),Hn,a(" 类, 该类允许选择带有查询参数的分页类")])]),n("li",null,[Zn,n("p",null,[a("该 "),n("a",Vn,[a("django-rest-framework-link-header-pagination"),s(e)]),n("a",Un,[a(" 软件包"),s(e)]),a("包括一个 "),Kn,a(" 类, 该类通过 Github 开发人员文档中 Link 描述的 HTTP 标头提供分页")])])])])}const $n=i(d,[["render",Wn],["__file","Rest-framework专栏讲解(二十三)：Pagination.html.vue"]]);export{$n as default};
