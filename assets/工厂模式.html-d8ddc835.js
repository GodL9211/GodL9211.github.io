const e=JSON.parse('{"key":"v-56e18dfe","path":"/docs/python/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html","title":"工厂模式","lang":"zh-CN","frontmatter":{"title":"工厂模式","icon":"book","index":true,"article":false,"description":"前言 另外一个比较常用的创建型模式：工厂模式（Factory Design Pattern），用于创建和管理对象的实例化过程。它提供了一种灵活的方式来创建对象，使得代码更具可扩展性和可维护性。\\r 一般情况下，工厂模式分为三种更加细分的类型：简单工厂、`工厂方法和抽象工厂。\\r简单工厂模式：允许接口创建对象，但不会暴露对象的创建逻辑。; \\r工厂方法模式：允...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/docs/python/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"暴走の海鸽"}],["meta",{"property":"og:title","content":"工厂模式"}],["meta",{"property":"og:description","content":"前言 另外一个比较常用的创建型模式：工厂模式（Factory Design Pattern），用于创建和管理对象的实例化过程。它提供了一种灵活的方式来创建对象，使得代码更具可扩展性和可维护性。\\r 一般情况下，工厂模式分为三种更加细分的类型：简单工厂、`工厂方法和抽象工厂。\\r简单工厂模式：允许接口创建对象，但不会暴露对象的创建逻辑。; \\r工厂方法模式：允..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-28T10:09:56.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"工厂模式"}],["meta",{"property":"article:author","content":"Mr.暴走の海鸽"}],["meta",{"property":"article:modified_time","content":"2023-09-28T10:09:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"工厂模式\\",\\"description\\":\\"前言 另外一个比较常用的创建型模式：工厂模式（Factory Design Pattern），用于创建和管理对象的实例化过程。它提供了一种灵活的方式来创建对象，使得代码更具可扩展性和可维护性。\\\\r 一般情况下，工厂模式分为三种更加细分的类型：简单工厂、`工厂方法和抽象工厂。\\\\r简单工厂模式：允许接口创建对象，但不会暴露对象的创建逻辑。; \\\\r工厂方法模式：允...\\"}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"什么时候该用工厂模式？","slug":"什么时候该用工厂模式","link":"#什么时候该用工厂模式","children":[]},{"level":2,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[{"level":3,"title":"简单工厂（Simple Factory）","slug":"简单工厂-simple-factory","link":"#简单工厂-simple-factory","children":[]},{"level":3,"title":"工厂方法（Factory Method）","slug":"工厂方法-factory-method","link":"#工厂方法-factory-method","children":[]},{"level":3,"title":"抽象工厂（Abstract Factory）","slug":"抽象工厂-abstract-factory","link":"#抽象工厂-abstract-factory","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1695120233000,"updatedTime":1695895796000,"contributors":[{"name":"lianhaifeng","email":"lianhaifeng@rongannetworks.com","commits":3}]},"readingTime":{"minutes":4.34,"words":1301},"filePathRelative":"docs/python/设计模式/工厂模式.md","localizedDate":"2023年9月19日","excerpt":"","autoDesc":true}');export{e as data};
