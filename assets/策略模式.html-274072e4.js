const e=JSON.parse('{"key":"v-746cffde","path":"/docs/python/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html","title":"策略模式","lang":"zh-CN","frontmatter":{"title":"策略模式","icon":"book","index":true,"article":false,"description":"前言 在实际的项目开发中，策略模式(Strategy Design Pattern)也比较常用。最常见的应用场景是，利用它来避免冗长的 if-else 或 switch 分支判断。 我们生活中的场景：\\r买东西结账：可以使用微信支付、支付宝支付或者银行卡支付，这些交易方式就是不同的策略。 ; \\r登录APP：可以使用QQ登录、微信登录、微博登录等，这些不同...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/docs/python/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"暴走の海鸽"}],["meta",{"property":"og:title","content":"策略模式"}],["meta",{"property":"og:description","content":"前言 在实际的项目开发中，策略模式(Strategy Design Pattern)也比较常用。最常见的应用场景是，利用它来避免冗长的 if-else 或 switch 分支判断。 我们生活中的场景：\\r买东西结账：可以使用微信支付、支付宝支付或者银行卡支付，这些交易方式就是不同的策略。 ; \\r登录APP：可以使用QQ登录、微信登录、微博登录等，这些不同..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-24T10:00:53.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"策略模式"}],["meta",{"property":"article:author","content":"Mr.暴走の海鸽"}],["meta",{"property":"article:modified_time","content":"2023-10-24T10:00:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"策略模式\\",\\"description\\":\\"前言 在实际的项目开发中，策略模式(Strategy Design Pattern)也比较常用。最常见的应用场景是，利用它来避免冗长的 if-else 或 switch 分支判断。 我们生活中的场景：\\\\r买东西结账：可以使用微信支付、支付宝支付或者银行卡支付，这些交易方式就是不同的策略。 ; \\\\r登录APP：可以使用QQ登录、微信登录、微博登录等，这些不同...\\"}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"策略的定义","slug":"策略的定义","link":"#策略的定义","children":[]},{"level":2,"title":"策略的创建","slug":"策略的创建","link":"#策略的创建","children":[]},{"level":2,"title":"策略的使用","slug":"策略的使用","link":"#策略的使用","children":[]}],"git":{"createdTime":1695120233000,"updatedTime":1698141653000,"contributors":[{"name":"lianhaifeng","email":"lianhaifeng@rongannetworks.com","commits":4}]},"readingTime":{"minutes":2.16,"words":647},"filePathRelative":"docs/python/设计模式/策略模式.md","localizedDate":"2023年9月19日","excerpt":"","autoDesc":true}');export{e as data};
