import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as p,c,a as n,b as s,e as a,f as o}from"./app-7702e136.js";const r={},d=o('<h1 id="rest-framework专栏讲解-十六-permissions" tabindex="-1"><a class="header-anchor" href="#rest-framework专栏讲解-十六-permissions" aria-hidden="true">#</a> Rest-framework专栏讲解(十六)：Permissions</h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#%E6%9D%83%E9%99%90">权限</a><ul><li><a href="#%E5%A6%82%E4%BD%95%E7%A1%AE%E5%AE%9A%E6%9D%83%E9%99%90">如何确定权限</a></li><li><a href="#%E5%AF%B9%E8%B1%A1%E7%BA%A7%E6%9D%83%E9%99%90">对象级权限</a><ul><li><a href="#%E5%AF%B9%E8%B1%A1%E7%BA%A7%E6%9D%83%E9%99%90%E7%9A%84%E9%99%90%E5%88%B6">对象级权限的限制</a></li></ul></li><li><a href="#%E8%AE%BE%E7%BD%AE%E6%9D%83%E9%99%90%E7%AD%96%E7%95%A5">设置权限策略</a></li></ul></li><li><a href="#API-%E5%8F%82%E8%80%83">API 参考</a><ul><li><a href="#AllowAny">AllowAny</a></li><li><a href="#IsAuthenticated">IsAuthenticated</a></li><li><a href="#IsAdminUser">IsAdminUser</a></li><li><a href="#IsAuthenticatedOrReadOnly">IsAuthenticatedOrReadOnly</a></li><li><a href="#DjangoModelPermissions">DjangoModelPermissions</a><ul><li><a href="#%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%8C%85%E5%90%AB-queryset-%E5%B1%9E%E6%80%A7%E7%9A%84%E8%A7%86%E5%9B%BE">使用不包含 queryset 属性的视图。</a></li></ul></li><li><a href="#DjangoModelPermissionsOrAnonReadOnly">DjangoModelPermissionsOrAnonReadOnly</a></li><li><a href="#DjangoObjectPermissions">DjangoObjectPermissions</a></li></ul></li><li><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9D%83%E9%99%90">自定义权限</a><ul><li><a href="#%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90">举个栗子</a></li></ul></li></ul><hr>',4),l={href:"http://www.django-rest-framework.org/api-guide/permissions/",title:"官方原文链接",target:"_blank",rel:"noopener noreferrer"},u={id:"权限",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#权限","aria-hidden":"true"},"#",-1),m={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E6%9D%83%E9%99%90",title:"权限",target:"_blank",rel:"noopener noreferrer"},h=o("<p>与 authentication 和 throttling 一起，permission 决定是应该接受还是拒绝访问请求。</p><p>权限检查总是在视图的最开始处运行，在任何其他代码被允许进行之前。权限检查通常会使用 <code>request.user</code> 和 <code>request.auth</code> 属性中的认证信息来确定是否允许传入请求。</p><p>权限用于授予或拒绝不同类别的用户访问 API 的不同部分。</p><p>最简单的权限是允许通过身份验证的用户访问，并拒绝未经身份验证的用户访问。这对应于 REST framework 中的 <code>IsAuthenticated</code> 类。</p><p>稍微宽松的权限会允许通过身份验证的用户完全访问，而未通过身份验证的用户只能进行只读访问。这对应于 REST framework 中的 <code>IsAuthenticatedOrReadOnly</code> 类。</p>",5),_={id:"如何确定权限",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#如何确定权限","aria-hidden":"true"},"#",-1),f={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E5%A6%82%E4%BD%95%E7%A1%AE%E5%AE%9A%E6%9D%83%E9%99%90",title:"如何确定权限",target:"_blank",rel:"noopener noreferrer"},b=o("<p>REST framework 中的权限总是被定义为权限类的列表。</p><p>在运行视图的主体之前，检查列表中的每个权限。如果任何权限检查失败，则会引发 <code>exceptions.PermissionDenied</code> 或 <code>exceptions.NotAuthenticated</code> 异常，并且视图的主体不会再运行。</p><p>当权限检查失败时，根据以下规则，将返回 “403 Forbidden” 或 “401 Unauthorized” 响应：</p><ul><li>该请求已成功通过身份验证，但权限被拒绝。 <em>— 将返回 403 Forbidden 响应。</em></li><li>该请求未成功通过身份验证，并且最高优先级身份验证类未添加 <code>WWW-Authenticate</code> header。<em>— 将返回 403 Forbidden 响应。</em></li><li>该请求未成功通过身份验证，不过最高优先级身份验证类添加了 <code>WWW-Authenticate</code> header。— 返回一个 HTTP 401 Unauthorized 响应，并会带上一个适当的 <code>WWW-Authenticate</code> header。</li></ul>",4),E={id:"对象级权限",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#对象级权限","aria-hidden":"true"},"#",-1),A={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E5%AF%B9%E8%B1%A1%E7%BA%A7%E6%9D%83%E9%99%90",title:"对象级权限",target:"_blank",rel:"noopener noreferrer"},y=o(`<p>REST framework 权限还支持对象级权限。对象级权限用于确定是否允许用户对特定对象进行操作，该特定对象通常是指模型实例。</p><p><code>.get_object()</code> 被调用时，对象级权限由 REST framework 的通用视图执行。与视图级权限一样，如果用户不被允许对给定对象进行操作，则会引发 <code>exceptions.PermissionDenied</code> 异常。</p><p>如果您正在编写自己的视图并希望强制执行对象级权限，或者如果您在通用视图上重写了 <code>get_object</code> 方法，那么将需要显式地在你检索该对象时调用 <code>.check_object_permissions(request, obj)</code> 方法。</p><p>这将引发 <code>PermissionDenied</code> 或 <code>NotAuthenticated</code> 异常，或者只是在视图具有适当的权限时才返回。</p><p>例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_object</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    obj <span class="token operator">=</span> get_object_or_404<span class="token punctuation">(</span>self<span class="token punctuation">.</span>get_queryset<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pk<span class="token operator">=</span>self<span class="token punctuation">.</span>kwargs<span class="token punctuation">[</span><span class="token string">&quot;pk&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>check_object_permissions<span class="token punctuation">(</span>self<span class="token punctuation">.</span>request<span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
    <span class="token keyword">return</span> obj
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是, 除了 <code>DjangoObjectPermissions</code> 之外, <code>rest_framework.permission</code> 中提供的权限类不要实现检查对象权限所需的方法。</p><p>如果要使用提供的权限类来检查对象权限, 则必须将其子类化并实现自定义权限部分中描述的 <code>has_object_permission()</code> 方法。</p>`,8),w={id:"对象级权限的限制",tabindex:"-1"},j=n("a",{class:"header-anchor",href:"#对象级权限的限制","aria-hidden":"true"},"#",-1),D={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E5%AF%B9%E8%B1%A1%E7%BA%A7%E6%9D%83%E9%99%90%E7%9A%84%E9%99%90%E5%88%B6",title:"对象级权限的限制",target:"_blank",rel:"noopener noreferrer"},P=n("p",null,"出于性能原因，通用视图在返回对象列表时不会自动将对象级权限应用于查询集中的每个实例。",-1),B=n("p",null,"通常，当您使用对象级权限时，您还需要适当地过滤查询集，以确保用户只能看到他们被允许查看的实例。",-1),q={id:"设置权限策略",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#设置权限策略","aria-hidden":"true"},"#",-1),O={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E8%AE%BE%E7%BD%AE%E6%9D%83%E9%99%90%E7%AD%96%E7%95%A5",title:"设置权限策略",target:"_blank",rel:"noopener noreferrer"},x=o(`<p>默认权限策略可以使用 <code>DEFAULT_PERMISSION_CLASSES</code> setting 全局设置。例如。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PERMISSION_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&#39;rest_framework.permissions.IsAuthenticated&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果未指定，则此设置默认为允许无限制访问：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token string">&#39;DEFAULT_PERMISSION_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
   <span class="token string">&#39;rest_framework.permissions.AllowAny&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您还可以在基于 <code>APIView</code> 类的视图上设置身份验证策略。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>permissions <span class="token keyword">import</span> IsAuthenticated
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>views <span class="token keyword">import</span> APIView

<span class="token keyword">class</span> <span class="token class-name">ExampleView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    permission_classes <span class="token operator">=</span> <span class="token punctuation">[</span>IsAuthenticated<span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        content <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;request was permitted&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者在基于 <code>@api_view</code> 装饰器的函数视图上设置。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>decorators <span class="token keyword">import</span> api_view<span class="token punctuation">,</span> permission_classes
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>permissions <span class="token keyword">import</span> IsAuthenticated
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response

<span class="token decorator annotation punctuation">@api_view</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@permission_classes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>IsAuthenticated<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">example_view</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    content <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;request was permitted&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong> 当你通过类属性或装饰器设置新的权限类时，<code>settings.py</code> 文件中的默认设置会被忽略。</p></blockquote><p>如果它们继承自 <code>rest_framework.permissions.BasePermission</code>, 则可以使用标准的 Python 按位运算符来组合权限, 例如 <code>IsAuthenticatedOrReadOnly</code> 可以这样写：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>permissions <span class="token keyword">import</span> BasePermission<span class="token punctuation">,</span> IsAuthenticated<span class="token punctuation">,</span> SAFE_METHODS
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>views <span class="token keyword">import</span> APIView

<span class="token keyword">class</span> <span class="token class-name">ReadOnly</span><span class="token punctuation">(</span>BasePermission<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">has_permission</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> request<span class="token punctuation">.</span>method <span class="token keyword">in</span> SAFE_METHODS

<span class="token keyword">class</span> <span class="token class-name">ExampleView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    permission_classes <span class="token operator">=</span> <span class="token punctuation">[</span>IsAuthenticated<span class="token operator">|</span>ReadOnly<span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        content <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;request was permitted&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：它支持 <code>＆</code> (和)、 <code>|</code> (或)和 <code>〜</code> (不是)。</p>`,12),T={id:"api-参考",tabindex:"-1"},S=n("a",{class:"header-anchor",href:"#api-参考","aria-hidden":"true"},"#",-1),R={href:"http://drf.jiuyou.info/#/drf/permissions?id=api-%E5%8F%82%E8%80%83",title:"API 参考",target:"_blank",rel:"noopener noreferrer"},F={id:"allowany",tabindex:"-1"},M=n("a",{class:"header-anchor",href:"#allowany","aria-hidden":"true"},"#",-1),N={href:"http://drf.jiuyou.info/#/drf/permissions?id=allowany",title:"AllowAny",target:"_blank",rel:"noopener noreferrer"},C=n("p",null,[n("code",null,"AllowAny"),s(" 权限类将允许不受限制的访问，而不管该请求是否已通过身份验证或未经身份验证。")],-1),H=n("p",null,"也不一定非要用此权限，可以通过为权限设置空列表或元组来实现相同的结果，但是你会发现，使用此权限使意图更加清晰。",-1),U={id:"isauthenticated",tabindex:"-1"},V=n("a",{class:"header-anchor",href:"#isauthenticated","aria-hidden":"true"},"#",-1),L={href:"http://drf.jiuyou.info/#/drf/permissions?id=isauthenticated",title:"IsAuthenticated",target:"_blank",rel:"noopener noreferrer"},W=n("p",null,[n("code",null,"IsAuthenticated"),s(" 权限类将拒绝任何未通过身份验证的用户的访问。")],-1),G=n("p",null,"如果你希望 API 只能由注册用户访问，则可以使用此权限。",-1),z={id:"isadminuser",tabindex:"-1"},K=n("a",{class:"header-anchor",href:"#isadminuser","aria-hidden":"true"},"#",-1),J={href:"http://drf.jiuyou.info/#/drf/permissions?id=isadminuser",title:"IsAdminUser",target:"_blank",rel:"noopener noreferrer"},Q=n("p",null,[n("code",null,"IsAdminUser"),s(" 权限仅允许 "),n("code",null,"user.is_staff"),s(" 为 "),n("code",null,"True"),s(" 用户访问，其他任何用户都将被拒绝。")],-1),X=n("p",null,"如果你希望 API 只能被部分受信任的管理员访问，则可以使用此权限。",-1),Y={id:"isauthenticatedorreadonly",tabindex:"-1"},Z=n("a",{class:"header-anchor",href:"#isauthenticatedorreadonly","aria-hidden":"true"},"#",-1),$={href:"http://drf.jiuyou.info/#/drf/permissions?id=isauthenticatedorreadonly",title:"IsAuthenticatedOrReadOnly",target:"_blank",rel:"noopener noreferrer"},nn=n("p",null,[n("code",null,"IsAuthenticatedOrReadOnly"),s(" 允许通过身份验证的用户执行任何请求。未通过身份验证的用户只能请求 “安全” 的方法： "),n("code",null,"GET"),s("， "),n("code",null,"HEAD"),s(" 或 "),n("code",null,"OPTIONS"),s("。")],-1),sn=n("p",null,"如果你希望 API 允许匿名用户拥有读取权限，并且只允许对已通过身份验证的用户执行写入权限，则可以使用此权限。",-1),en={id:"djangomodelpermissions",tabindex:"-1"},an=n("a",{class:"header-anchor",href:"#djangomodelpermissions","aria-hidden":"true"},"#",-1),on={href:"http://drf.jiuyou.info/#/drf/permissions?id=djangomodelpermissions",title:"DjangoModelPermissions",target:"_blank",rel:"noopener noreferrer"},tn=o("<p>此权限类与 Django 的标准 <code>django.contrib.auth</code> 模型权限绑定。此权限只能应用于具有 <code>.queryset</code> 属性集的视图。只有在用户通过身份验证并分配了相关模型权限的情况下，才有权限访问。</p><ul><li><code>POST</code> 请求要求用户在模型上具有 <code>add</code> 权限。</li><li><code>PUT</code> 和 <code>PATCH</code> 请求要求用户在模型上具有 <code>change</code> 权限。</li><li><code>DELETE</code> 请求要求用户在模型上具有 <code>delete</code> 权限。</li></ul><p>默认行为也可以被重写以支持自定义模型权限。例如，你可能想要包含 GET 请求的 <code>view</code> 模型权限。</p><p>要自定义模型权限，请继承 <code>DjangoModelPermissions</code> 并设置 <code>.perms_map</code> 属性。有关详细信息，请参阅源代码。</p>",4),pn={id:"使用不包含-queryset-属性的视图。",tabindex:"-1"},cn=n("a",{class:"header-anchor",href:"#使用不包含-queryset-属性的视图。","aria-hidden":"true"},"#",-1),rn={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%8C%85%E5%90%AB-queryset-%E5%B1%9E%E6%80%A7%E7%9A%84%E8%A7%86%E5%9B%BE%E3%80%82",title:"使用不包含 ",target:"_blank",rel:"noopener noreferrer"},dn={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%8C%85%E5%90%AB-queryset-%E5%B1%9E%E6%80%A7%E7%9A%84%E8%A7%86%E5%9B%BE%E3%80%82",title:"queryset",target:"_blank",rel:"noopener noreferrer"},ln={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%8C%85%E5%90%AB-queryset-%E5%B1%9E%E6%80%A7%E7%9A%84%E8%A7%86%E5%9B%BE%E3%80%82",title:" 属性的视图。",target:"_blank",rel:"noopener noreferrer"},un=o(`<p>如果你将此权限与重写 <code>get_queryset()</code> 方法的视图一起使用，则视图上可能没有 <code>queryset</code> 属性。在这种情况下，我们建议使用 sentinel 查询集标记视图，以便此类可以确定所需的权限。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>queryset <span class="token operator">=</span> User<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>none<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># Required for DjangoModelPermissions</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),kn={id:"djangomodelpermissionsoranonreadonly",tabindex:"-1"},mn=n("a",{class:"header-anchor",href:"#djangomodelpermissionsoranonreadonly","aria-hidden":"true"},"#",-1),hn={href:"http://drf.jiuyou.info/#/drf/permissions?id=djangomodelpermissionsoranonreadonly",title:"DjangoModelPermissionsOrAnonReadOnly",target:"_blank",rel:"noopener noreferrer"},_n=n("p",null,[s("与 "),n("code",null,"DjangoModelPermissions"),s(" 类似，但也允许未经身份验证的用户对 API 进行只读访问。")],-1),vn={id:"djangoobjectpermissions",tabindex:"-1"},fn=n("a",{class:"header-anchor",href:"#djangoobjectpermissions","aria-hidden":"true"},"#",-1),bn={href:"http://drf.jiuyou.info/#/drf/permissions?id=djangoobjectpermissions",title:"DjangoObjectPermissions",target:"_blank",rel:"noopener noreferrer"},En={href:"https://github.com/lukaszb/django-guardian",title:"django-guardian",target:"_blank",rel:"noopener noreferrer"},gn=o("<p>与 <code>DjangoModelPermissions</code> 一样，此权限只能应用于具有 <code>.queryset</code> 属性或 <code>.get_queryset()</code> 方法的视图。只有在用户通过身份验证并且具有相关的每个对象权限和相关的模型权限后，才有权限访问。</p><ul><li><code>POST</code> 请求要求用户对模型实例具有 <code>add</code> 权限。</li><li><code>PUT</code> 和 <code>PATCH</code> 请求要求用户对模型实例具有 <code>change</code> 权限。</li><li><code>DELETE</code> 请求要求用户对模型实例具有 <code>delete</code> 权限。</li></ul><p>请注意，<code>DjangoObjectPermissions</code> 不需要 <code>django-guardian</code> 软件包，并且同样支持其他对象级别的后端。</p><p>与 <code>DjangoModelPermissions</code> 一样，你可以通过继承 <code>DjangoObjectPermissions</code> 并设置 <code>.perms_map</code> 属性来自定义模型权限。有关详细信息，请参阅源代码。</p><hr><p><strong>注意</strong>: 如果你需要获取 <code>GET</code>，<code>HEAD</code> 和 <code>OPTIONS</code> 请求的对象级 <code>view</code> 权限，则还需要考虑添加 <code>DjangoObjectPermissionsFilter</code> 类，以确保列表端点只返回包含用户具有查看权限的对象的结果。</p>",6),An={id:"自定义权限",tabindex:"-1"},yn=n("a",{class:"header-anchor",href:"#自定义权限","aria-hidden":"true"},"#",-1),wn={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9D%83%E9%99%90",title:"自定义权限",target:"_blank",rel:"noopener noreferrer"},jn=o(`<p>要实现自定义权限，请继承 <code>BasePermission</code> 并实现以下方法中的一个或两个：</p><ul><li><code>.has_permission(self, request, view)</code></li><li><code>.has_object_permission(self, request, view, obj)</code></li></ul><p>如果请求被授予访问权限，则方法应该返回 <code>True</code>，否则返回 <code>False</code>。</p><p>如果你需要测试一个请求是一个读操作还是一个写操作，你应该根据常量 <code>SAFE_METHODS</code> 检查请求方法， <code>SAFE_METHODS</code> 是一个包含 <code>&#39;GET&#39;</code>，<code>&#39;OPTIONS&#39;</code> 和 <code>&#39;HEAD&#39;</code> 的元组。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token keyword">in</span> permissions<span class="token punctuation">.</span>SAFE_METHODS<span class="token punctuation">:</span>
    <span class="token comment"># Check permissions for read-only request</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token comment"># Check permissions for write request</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>Note</strong>: 只有在视图级别 <code>has_permission</code> 检查已通过时才会调用实例级别的 <code>has_object_permission</code> 方法。还要注意，为了运行实例级检查，视图代码应该显式调用 <code>.check_object_permissions(request, obj)</code>。如果你使用的是通用视图，那么默认情况下会为您处理。（基于函数的视图将需要明确检查对象权限，在失败时引发 <code>PermissionDenied</code>。）</p></blockquote><hr><p>如果测试失败，自定义权限将引发 <code>PermissionDenied</code> 异常。要更改与异常相关的错误消息，请直接在你的自定义权限上实现 <code>message</code> 属性。否则将使用 <code>PermissionDenied</code> 的 <code>default_detail</code> 属性。</p><p>同样，要更改与异常关联的代码标识符, 请直接在您的自定义权限上实现 <code>code</code> 属性, 否则将使用 <code>PermissionDenied</code> 的 <code>default_codefrom</code> 属性。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> permissions

<span class="token keyword">class</span> <span class="token class-name">CustomerAccessPermission</span><span class="token punctuation">(</span>permissions<span class="token punctuation">.</span>BasePermission<span class="token punctuation">)</span><span class="token punctuation">:</span>
    message <span class="token operator">=</span> <span class="token string">&#39;Adding customers not allowed.&#39;</span>

    <span class="token keyword">def</span> <span class="token function">has_permission</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">:</span>
         <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),Dn={id:"举个栗子",tabindex:"-1"},Pn=n("a",{class:"header-anchor",href:"#举个栗子","aria-hidden":"true"},"#",-1),Bn={href:"http://drf.jiuyou.info/#/drf/permissions?id=%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90",title:"举个栗子",target:"_blank",rel:"noopener noreferrer"},qn=o(`<p>以下是一个权限类的示例，该权限类将传入请求的 IP 地址与黑名单进行比对，并在 IP 被列入黑名单时拒绝该请求。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> permissions

<span class="token keyword">class</span> <span class="token class-name">BlocklistPermission</span><span class="token punctuation">(</span>permissions<span class="token punctuation">.</span>BasePermission<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Global permission check for blocked IPs.
    &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">has_permission</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">:</span>
        ip_addr <span class="token operator">=</span> request<span class="token punctuation">.</span>META<span class="token punctuation">[</span><span class="token string">&#39;REMOTE_ADDR&#39;</span><span class="token punctuation">]</span>
        blocked <span class="token operator">=</span> Blocklist<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>ip_addr<span class="token operator">=</span>ip_addr<span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">not</span> blocked
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了针对所有传入请求运行的全局权限，还可以创建对象级权限，这些权限仅针对影响特定对象实例的操作执行。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">IsOwnerOrReadOnly</span><span class="token punctuation">(</span>permissions<span class="token punctuation">.</span>BasePermission<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Object-level permission to only allow owners of an object to edit it.
    Assumes the model instance has an \`owner\` attribute.
    &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">has_object_permission</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Read permissions are allowed to any request,</span>
        <span class="token comment"># so we&#39;ll always allow GET, HEAD or OPTIONS requests.</span>
        <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token keyword">in</span> permissions<span class="token punctuation">.</span>SAFE_METHODS<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>

        <span class="token comment"># Instance must have an attribute named \`owner\`.</span>
        <span class="token keyword">return</span> obj<span class="token punctuation">.</span>owner <span class="token operator">==</span> request<span class="token punctuation">.</span>user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，通用视图将检查适当的对象级权限，但如果你正在编写自己的自定义视图，则需要确保检查自己的对象级权限。您可以通过在拥有对象实例后从视图中调用 <code>self.check_object_permissions(request, obj)</code> 来完成此操作。如果任何对象级权限检查失败，此调用将引发适当的 <code>APIException</code>，否则将简单地返回。</p><p>另请注意，通用视图将仅检查单个模型实例的视图的对象级权限。如果你需要列表视图的对象级过滤，则需要单独过滤查询集。</p>`,6),In={href:"https://link.juejin.cn/?target=https://www.django-rest-framework.org/api-guide/filtering/",title:"过滤文档",target:"_blank",rel:"noopener noreferrer"};function On(xn,Tn){const e=i("ExternalLinkIcon");return p(),c("div",null,[d,n("blockquote",null,[n("p",null,[n("a",l,[s("官方原文链接"),a(e)])])]),n("h1",u,[k,s(),n("a",m,[s("权限"),a(e)])]),h,n("h2",_,[v,s(),n("a",f,[s("如何确定权限"),a(e)])]),b,n("h2",E,[g,s(),n("a",A,[s("对象级权限"),a(e)])]),y,n("h4",w,[j,s(),n("a",D,[s("对象级权限的限制"),a(e)])]),P,B,n("h2",q,[I,s(),n("a",O,[s("设置权限策略"),a(e)])]),x,n("h1",T,[S,s(),n("a",R,[s("API 参考"),a(e)])]),n("h2",F,[M,s(),n("a",N,[s("AllowAny"),a(e)])]),C,H,n("h2",U,[V,s(),n("a",L,[s("IsAuthenticated"),a(e)])]),W,G,n("h2",z,[K,s(),n("a",J,[s("IsAdminUser"),a(e)])]),Q,X,n("h2",Y,[Z,s(),n("a",$,[s("IsAuthenticatedOrReadOnly"),a(e)])]),nn,sn,n("h2",en,[an,s(),n("a",on,[s("DjangoModelPermissions"),a(e)])]),tn,n("h4",pn,[cn,s(),n("a",rn,[s("使用不包含 "),a(e)]),n("a",dn,[s("queryset"),a(e)]),n("a",ln,[s(" 属性的视图。"),a(e)])]),un,n("h2",kn,[mn,s(),n("a",hn,[s("DjangoModelPermissionsOrAnonReadOnly"),a(e)])]),_n,n("h2",vn,[fn,s(),n("a",bn,[s("DjangoObjectPermissions"),a(e)])]),n("p",null,[s("该权限类与 Django 的标准对象权限框架绑定，该框架允许对每个模型对象进行权限验证。为了使用此权限类，你还需要添加支持对象级权限的权限后端，例如 "),n("a",En,[s("django-guardian"),a(e)]),s("。")]),gn,n("h1",An,[yn,s(),n("a",wn,[s("自定义权限"),a(e)])]),jn,n("h2",Dn,[Pn,s(),n("a",Bn,[s("举个栗子"),a(e)])]),qn,n("p",null,[s("有关更多详细信息请参见"),n("a",In,[s("过滤文档"),a(e)]),s("。")])])}const Fn=t(r,[["render",On],["__file","Rest-framework专栏讲解(十六)：Permissions.html.vue"]]);export{Fn as default};
