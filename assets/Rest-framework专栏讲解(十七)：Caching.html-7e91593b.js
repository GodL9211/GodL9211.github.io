import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as p,c as r,a as s,b as n,e,f as t}from"./app-9976b6d0.js";const i={},l=t('<h1 id="rest-framework专栏讲解-十七-caching" tabindex="-1"><a class="header-anchor" href="#rest-framework专栏讲解-十七-caching" aria-hidden="true">#</a> Rest-framework专栏讲解(十七)：Caching</h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#%E7%82%B9%E5%87%BB%E8%B7%B3%E8%BD%AC%E5%88%B0-Rest-Framework-%E4%B8%93%E6%A0%8F%E7%9B%AE%E5%BD%95">点击跳转到 Rest-Framework 专栏目录</a></li><li><a href="#%E5%B0%86-cache-%E4%B8%8E-APIview-%E5%92%8C-viewset-%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8">将 cache 与 APIview 和 viewset 一起使用</a></li></ul><hr>',4),u={id:"点击跳转到-rest-framework-专栏目录",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#点击跳转到-rest-framework-专栏目录","aria-hidden":"true"},"#",-1),k={href:"https://juejin.cn/post/6844904185163415566",title:"点击跳转到 Rest-Framework 专栏目录",target:"_blank",rel:"noopener noreferrer"},v=s("h3",{id:"将-cache-与-apiview-和-viewset-一起使用",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#将-cache-与-apiview-和-viewset-一起使用","aria-hidden":"true"},"#"),n(" 将 cache 与 APIview 和 viewset 一起使用")],-1),m={href:"https://link.juejin.cn/?target=https://docs.djangoproject.com/en/dev/topics/class-based-views/intro/#decorating-the-class",title:"method_decorator",target:"_blank",rel:"noopener noreferrer"},h={href:"https://link.juejin.cn/?target=https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache",title:"cache_page",target:"_blank",rel:"noopener noreferrer"},_={href:"https://link.juejin.cn/?target=https://docs.djangoproject.com/en/dev/topics/http/decorators/#django.views.decorators.vary.vary_on_cookie",title:"vary_on_cookie",target:"_blank",rel:"noopener noreferrer"},w=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>decorators <span class="token keyword">import</span> method_decorator
<span class="token keyword">from</span> django<span class="token punctuation">.</span>views<span class="token punctuation">.</span>decorators<span class="token punctuation">.</span>cache <span class="token keyword">import</span> cache_page
<span class="token keyword">from</span> django<span class="token punctuation">.</span>views<span class="token punctuation">.</span>decorators<span class="token punctuation">.</span>vary <span class="token keyword">import</span> vary_on_cookie

<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>views <span class="token keyword">import</span> APIView
<span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> viewsets


<span class="token keyword">class</span> <span class="token class-name">UserViewSet</span><span class="token punctuation">(</span>viewsets<span class="token punctuation">.</span>ViewSet<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token comment"># Cache requested url for each user for 2 hours</span>
    <span class="token decorator annotation punctuation">@method_decorator</span><span class="token punctuation">(</span>cache_page<span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token decorator annotation punctuation">@method_decorator</span><span class="token punctuation">(</span>vary_on_cookie<span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">list</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        content <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;user_feed&#39;</span><span class="token punctuation">:</span> request<span class="token punctuation">.</span>user<span class="token punctuation">.</span>get_user_feed<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">PostView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token comment"># Cache page for the requested url</span>
    <span class="token decorator annotation punctuation">@method_decorator</span><span class="token punctuation">(</span>cache_page<span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        content <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Post title&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;body&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Post content&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：<code>cache_page decorator</code> 只缓存状态为 <code>200</code> 的 <code>GET</code> 和 <code>HEAD</code> 响应。</p>`,2);function b(f,g){const a=c("ExternalLinkIcon");return p(),r("div",null,[l,s("h4",u,[d,n(),s("a",k,[n("点击跳转到 Rest-Framework 专栏目录"),e(a)])]),v,s("p",null,[n("Django提供了一个 "),s("a",m,[n("method_decorator"),e(a)]),n(" 来使用基于类的视图的装饰器, 这可以与其他缓存装饰器一起使用，例如 "),s("a",h,[n("cache_page"),e(a)]),n(" 和 "),s("a",_,[n("vary_on_cookie"),e(a)]),n("。")]),w])}const B=o(i,[["render",b],["__file","Rest-framework专栏讲解(十七)：Caching.html.vue"]]);export{B as default};
