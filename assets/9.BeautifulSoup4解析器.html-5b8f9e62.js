import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c as l,a as s,b as n,e as t,f as c}from"./app-9976b6d0.js";const i={},u=s("h2",{id:"前言",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),n(" 前言")],-1),r=s("p",null,"大家好，我是海鸽。",-1),d=s("p",null,"和 lxml 一样，Beautiful Soup 也是一个HTML/XML的解析器，主要的功能也是如何解析和提取 HTML/XML 数据。",-1),k=s("p",null,"lxml 只会局部遍历，而Beautiful Soup 是基于HTML DOM的，会载入整个文档，解析整个DOM树，因此时间和内存开销都会大很多，所以性能要低于lxml。",-1),m={href:"http://www.w3school.com.cn/cssref/css_selectors.asp",target:"_blank",rel:"noopener noreferrer"},v=s("p",null,[n("Beautiful Soup 3 目前已经停止开发，推荐现在的项目使用Beautiful Soup 4。使用 pip 安装即可："),s("code",null,"pip install beautifulsoup4")],-1),g={href:"http://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/",target:"_blank",rel:"noopener noreferrer"},h=c(`<table><thead><tr><th style="text-align:center;">抓取工具</th><th style="text-align:center;">速度</th><th style="text-align:center;">使用难度</th><th style="text-align:center;">安装难度</th></tr></thead><tbody><tr><td style="text-align:center;">正则</td><td style="text-align:center;">最快</td><td style="text-align:center;">困难</td><td style="text-align:center;">无（内置）</td></tr><tr><td style="text-align:center;">BeautifulSoup</td><td style="text-align:center;">慢</td><td style="text-align:center;">最简单</td><td style="text-align:center;">简单</td></tr><tr><td style="text-align:center;">lxml</td><td style="text-align:center;">快</td><td style="text-align:center;">简单</td><td style="text-align:center;">一般</td></tr></tbody></table><hr><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例：</h2><p>首先必须要导入 bs4 库</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># beautifulsoup4_test.py</span>

<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup

html <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were
&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,
&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and
&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;
and they lived at the bottom of a well.&lt;/p&gt;
&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;
&quot;&quot;&quot;</span>

<span class="token comment">#创建 Beautiful Soup 对象</span>
soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">)</span>

<span class="token comment">#打开本地 HTML 文件的方式来创建对象</span>
<span class="token comment">#soup = BeautifulSoup(open(&#39;index.html&#39;))</span>

<span class="token comment">#格式化输出 soup 对象的内容</span>
<span class="token keyword">print</span> soup<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>
   The Dormouse&#39;s story
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dromouse<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>
    The Dormouse&#39;s story
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>story<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   Once upon a time there were three little sisters; and their names were
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sister<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://example.com/elsie<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>link1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Elsie --&gt;</span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
   ,
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sister<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://example.com/lacie<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>link2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Lacie
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
   and
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sister<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://example.com/tillie<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>link3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Tillie
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
   ;
and they lived at the bottom of a well.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>story<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   ...
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四大对象种类" tabindex="-1"><a class="header-anchor" href="#四大对象种类" aria-hidden="true">#</a> 四大对象种类</h2><p>Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种:</p><ul><li>Tag</li><li>NavigableString</li><li>BeautifulSoup</li><li>Comment</li></ul><h3 id="_1-tag" tabindex="-1"><a class="header-anchor" href="#_1-tag" aria-hidden="true">#</a> 1. Tag</h3><p>Tag 通俗点讲就是 HTML 中的一个个标签，例如：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>The Dormouse&#39;s story<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sister<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://example.com/elsie<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>link1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- Elsie --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dromouse<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>The Dormouse&#39;s story<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的 <code>title</code> <code>head</code> <code>a</code> <code>p</code>等等 HTML 标签加上里面包括的内容就是 Tag，那么试着使用 Beautiful Soup 来获取 Tags:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup

html <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were
&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,
&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and
&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;
and they lived at the bottom of a well.&lt;/p&gt;
&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;
&quot;&quot;&quot;</span>

<span class="token comment">#创建 Beautiful Soup 对象</span>
soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">)</span>


<span class="token keyword">print</span> soup<span class="token punctuation">.</span>title
<span class="token comment"># &lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>head
<span class="token comment"># &lt;head&gt;&lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;&lt;/head&gt;</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>a
<span class="token comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>p
<span class="token comment"># &lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;/b&gt;&lt;/p&gt;</span>

<span class="token keyword">print</span> <span class="token builtin">type</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
<span class="token comment"># &lt;class &#39;bs4.element.Tag&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以利用 soup 加标签名轻松地获取这些标签的内容，这些对象的类型是<code>bs4.element.Tag</code>。但是注意，它查找的是在所有内容中的第一个符合要求的标签。如果要查询所有的标签，后面会进行介绍。</p><h5 id="对于-tag-它有两个重要的属性-是-name-和-attrs" tabindex="-1"><a class="header-anchor" href="#对于-tag-它有两个重要的属性-是-name-和-attrs" aria-hidden="true">#</a> 对于 Tag，它有两个重要的属性，是 name 和 attrs</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>name
<span class="token comment"># [document] #soup 对象本身比较特殊，它的 name 即为 [document]</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>head<span class="token punctuation">.</span>name
<span class="token comment"># head #对于其他内部标签，输出的值便为标签本身的名称</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>attrs
<span class="token comment"># {&#39;class&#39;: [&#39;title&#39;], &#39;name&#39;: &#39;dromouse&#39;}</span>
<span class="token comment"># 在这里，我们把 p 标签的所有属性打印输出了出来，得到的类型是一个字典。</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>p<span class="token punctuation">[</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">]</span> <span class="token comment"># soup.p.get(&#39;class&#39;)</span>
<span class="token comment"># [&#39;title&#39;] #还可以利用get方法，传入属性的名称，二者是等价的</span>

soup<span class="token punctuation">.</span>p<span class="token punctuation">[</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;newClass&quot;</span>
<span class="token keyword">print</span> soup<span class="token punctuation">.</span>p <span class="token comment"># 可以对这些属性和内容等等进行修改</span>
<span class="token comment"># &lt;p class=&quot;newClass&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;/b&gt;&lt;/p&gt;</span>

<span class="token keyword">del</span> soup<span class="token punctuation">.</span>p<span class="token punctuation">[</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 还可以对这个属性进行删除</span>
<span class="token keyword">print</span> soup<span class="token punctuation">.</span>p
<span class="token comment"># &lt;p name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;/b&gt;&lt;/p&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-navigablestring" tabindex="-1"><a class="header-anchor" href="#_2-navigablestring" aria-hidden="true">#</a> 2. NavigableString</h3><p>既然我们已经得到了标签的内容，那么问题来了，我们要想获取标签内部的文字怎么办呢？很简单，用 .string 即可，例如</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string
<span class="token comment"># The Dormouse&#39;s story</span>

<span class="token keyword">print</span> <span class="token builtin">type</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token punctuation">)</span>
<span class="token comment"># In [13]: &lt;class &#39;bs4.element.NavigableString&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-beautifulsoup" tabindex="-1"><a class="header-anchor" href="#_3-beautifulsoup" aria-hidden="true">#</a> 3. BeautifulSoup</h3><p>BeautifulSoup 对象表示的是一个文档的内容。大部分时候,可以把它当作 Tag 对象，是一个特殊的 Tag，我们可以分别获取它的类型，名称，以及属性来感受一下</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> <span class="token builtin">type</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token comment"># &lt;type &#39;unicode&#39;&gt;</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>name 
<span class="token comment"># [document]</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>attrs <span class="token comment"># 文档本身的属性为空</span>
<span class="token comment"># {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-comment" tabindex="-1"><a class="header-anchor" href="#_4-comment" aria-hidden="true">#</a> 4. Comment</h3><p>Comment 对象是一个特殊类型的 NavigableString 对象，其输出的内容不包括注释符号。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>a
<span class="token comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>string
<span class="token comment"># Elsie </span>

<span class="token keyword">print</span> <span class="token builtin">type</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>a<span class="token punctuation">.</span>string<span class="token punctuation">)</span>
<span class="token comment"># &lt;class &#39;bs4.element.Comment&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>a 标签里的内容实际上是注释，但是如果我们利用 .string 来输出它的内容时，注释符号已经去掉了。</p><h2 id="遍历文档树" tabindex="-1"><a class="header-anchor" href="#遍历文档树" aria-hidden="true">#</a> 遍历文档树</h2><h3 id="_1-直接子节点-contents-children-属性" tabindex="-1"><a class="header-anchor" href="#_1-直接子节点-contents-children-属性" aria-hidden="true">#</a> 1. 直接子节点 ：<code>.contents</code> <code>.children</code> 属性</h3><h4 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> .content</h4><p>tag 的 .content 属性可以将tag的子节点以列表的方式输出</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>head<span class="token punctuation">.</span>contents 
<span class="token comment">#[&lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出方式为列表，我们可以用列表索引来获取它的某一个元素</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>head<span class="token punctuation">.</span>contents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token comment">#&lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="children" tabindex="-1"><a class="header-anchor" href="#children" aria-hidden="true">#</a> .children</h4><p>它返回的不是一个 list，不过我们可以通过遍历获取所有子节点。</p><p>我们打印输出 .children 看一下，可以发现它是一个 list 生成器对象</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>head<span class="token punctuation">.</span>children
<span class="token comment">#&lt;listiterator object at 0x7f71457f5710&gt;</span>

<span class="token keyword">for</span> child <span class="token keyword">in</span>  soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>children<span class="token punctuation">:</span>
    <span class="token keyword">print</span> child
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dromouse<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>The Dormouse&#39;s story<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>story<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Once upon a time there were three little sisters; and their names were
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sister<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://example.com/elsie<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>link1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- Elsie --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>,
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sister<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://example.com/lacie<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>link2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Lacie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> and
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sister<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://example.com/tillie<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>link3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Tillie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>;
and they lived at the bottom of a well.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>story<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-所有子孙节点-descendants-属性" tabindex="-1"><a class="header-anchor" href="#_2-所有子孙节点-descendants-属性" aria-hidden="true">#</a> 2. 所有子孙节点: <code>.descendants</code> 属性</h3><p>.contents 和 .children 属性仅包含tag的直接子节点，.descendants 属性可以对所有tag的子孙节点进行递归循环，和 children类似，我们也需要遍历获取其中的内容。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> child <span class="token keyword">in</span> soup<span class="token punctuation">.</span>descendants<span class="token punctuation">:</span>
    <span class="token keyword">print</span> child
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&lt;</span>html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>The Dormouse&#39;s story<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;title&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;dromouse&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>b<span class="token operator">&gt;</span>The Dormouse&#39;s story<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;story&quot;</span><span class="token operator">&gt;</span>Once upon a time there were three little sisters<span class="token punctuation">;</span> <span class="token keyword">and</span> their names were
<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/elsie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> Elsie <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/lacie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link2&quot;</span><span class="token operator">&gt;</span>Lacie<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span> <span class="token keyword">and</span>
<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/tillie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link3&quot;</span><span class="token operator">&gt;</span>Tillie<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">and</span> they lived at the bottom of a well<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;story&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>The Dormouse&#39;s story<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>The Dormouse&#39;s story<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
The Dormouse&#39;s story


<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;title&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;dromouse&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>b<span class="token operator">&gt;</span>The Dormouse&#39;s story<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;story&quot;</span><span class="token operator">&gt;</span>Once upon a time there were three little sisters<span class="token punctuation">;</span> <span class="token keyword">and</span> their names were
<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/elsie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> Elsie <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/lacie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link2&quot;</span><span class="token operator">&gt;</span>Lacie<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span> <span class="token keyword">and</span>
<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/tillie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link3&quot;</span><span class="token operator">&gt;</span>Tillie<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">and</span> they lived at the bottom of a well<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;story&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>


<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;title&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;dromouse&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>b<span class="token operator">&gt;</span>The Dormouse&#39;s story<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>b<span class="token operator">&gt;</span>The Dormouse&#39;s story<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">&gt;</span>
The Dormouse&#39;s story


<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;story&quot;</span><span class="token operator">&gt;</span>Once upon a time there were three little sisters<span class="token punctuation">;</span> <span class="token keyword">and</span> their names were
<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/elsie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> Elsie <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/lacie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link2&quot;</span><span class="token operator">&gt;</span>Lacie<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span> <span class="token keyword">and</span>
<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/tillie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link3&quot;</span><span class="token operator">&gt;</span>Tillie<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">and</span> they lived at the bottom of a well<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
Once upon a time there were three little sisters<span class="token punctuation">;</span> <span class="token keyword">and</span> their names were

<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/elsie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>!<span class="token operator">-</span><span class="token operator">-</span> Elsie <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
 Elsie 
<span class="token punctuation">,</span>

<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/lacie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link2&quot;</span><span class="token operator">&gt;</span>Lacie<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
Lacie
 <span class="token keyword">and</span>

<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;sister&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;http://example.com/tillie&quot;</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;link3&quot;</span><span class="token operator">&gt;</span>Tillie<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
Tillie
<span class="token punctuation">;</span>
<span class="token keyword">and</span> they lived at the bottom of a well<span class="token punctuation">.</span>


<span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;story&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-节点内容-string-属性" tabindex="-1"><a class="header-anchor" href="#_3-节点内容-string-属性" aria-hidden="true">#</a> 3. 节点内容: <code>.string</code> 属性</h3><p>如果tag只有一个 NavigableString 类型子节点,那么这个tag可以使用 .string 得到子节点。如果一个tag仅有一个子节点,那么这个tag也可以使用 .string 方法,输出结果与当前唯一子节点的 .string 结果相同。</p><p>通俗点说就是：如果一个标签里面没有标签了，那么 .string 就会返回标签里面的内容。如果标签里面只有唯一的一个标签了，那么 .string 也会返回最里面的内容。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>head<span class="token punctuation">.</span>string
<span class="token comment">#The Dormouse&#39;s story</span>
<span class="token keyword">print</span> soup<span class="token punctuation">.</span>title<span class="token punctuation">.</span>string
<span class="token comment">#The Dormouse&#39;s story</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="搜索文档树" tabindex="-1"><a class="header-anchor" href="#搜索文档树" aria-hidden="true">#</a> 搜索文档树</h2><h3 id="_1-find-all-name-attrs-recursive-text-kwargs" tabindex="-1"><a class="header-anchor" href="#_1-find-all-name-attrs-recursive-text-kwargs" aria-hidden="true">#</a> 1.<code>find_all(name, attrs, recursive, text, **kwargs)</code></h3><h4 id="_1-name-参数" tabindex="-1"><a class="header-anchor" href="#_1-name-参数" aria-hidden="true">#</a> 1）name 参数</h4><p>name 参数可以查找所有名字为 name 的tag,字符串对象会被自动忽略掉</p><h5 id="a-传字符串" tabindex="-1"><a class="header-anchor" href="#a-传字符串" aria-hidden="true">#</a> A.传字符串</h5><p>最简单的过滤器是字符串.在搜索方法中传入一个字符串参数,Beautiful Soup会查找与字符串完整匹配的内容,下面的例子用于查找文档中所有的\`\`标签:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># [&lt;b&gt;The Dormouse&#39;s story&lt;/b&gt;]</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="b-传正则表达式" tabindex="-1"><a class="header-anchor" href="#b-传正则表达式" aria-hidden="true">#</a> B.传正则表达式</h5><p>如果传入正则表达式作为参数,Beautiful Soup会通过正则表达式的 match() 来匹配内容.下面例子中找出所有以b开头的标签,这表示<code>和</code>标签都应该被找到</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">for</span> tag <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&quot;^b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>tag<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token comment"># body</span>
<span class="token comment"># b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="c-传列表" tabindex="-1"><a class="header-anchor" href="#c-传列表" aria-hidden="true">#</a> C.传列表</h5><p>如果传入列表参数,Beautiful Soup会将与列表中任一元素匹配的内容返回.下面代码找到文档中所有<code>标签和</code>标签:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># [&lt;b&gt;The Dormouse&#39;s story&lt;/b&gt;,</span>
<span class="token comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span>
<span class="token comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span>
<span class="token comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-keyword-参数" tabindex="-1"><a class="header-anchor" href="#_2-keyword-参数" aria-hidden="true">#</a> 2）keyword 参数</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&#39;link2&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-text-参数" tabindex="-1"><a class="header-anchor" href="#_3-text-参数" aria-hidden="true">#</a> 3）text 参数</h4><p>通过 text 参数可以搜搜文档中的字符串内容，与 name 参数的可选值一样, text 参数接受 字符串 , 正则表达式 , 列表</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">&quot;Elsie&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># [u&#39;Elsie&#39;]</span>

soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Tillie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Elsie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lacie&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># [u&#39;Elsie&#39;, u&#39;Lacie&#39;, u&#39;Tillie&#39;]</span>

soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>text<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&quot;Dormouse&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">u&quot;The Dormouse&#39;s story&quot;</span><span class="token punctuation">,</span> <span class="token string">u&quot;The Dormouse&#39;s story&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css选择器" tabindex="-1"><a class="header-anchor" href="#css选择器" aria-hidden="true">#</a> CSS选择器</h2><p>这就是另一种与 find_all 方法有异曲同工之妙的查找方法.</p><ul><li>写 CSS 时，标签名不加任何修饰，类名前加<code>.</code>，id名前加<code>#</code></li><li>在这里我们也可以利用类似的方法来筛选元素，用到的方法是 <code>soup.select()</code>，返回类型是 <code>list</code></li></ul><h3 id="_1-通过标签名查找" tabindex="-1"><a class="header-anchor" href="#_1-通过标签名查找" aria-hidden="true">#</a> （1）通过标签名查找</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">#[&lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;]</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;b&gt;The Dormouse&#39;s story&lt;/b&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-通过类名查找" tabindex="-1"><a class="header-anchor" href="#_2-通过类名查找" aria-hidden="true">#</a> （2）通过类名查找</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;.sister&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-通过-id-名查找" tabindex="-1"><a class="header-anchor" href="#_3-通过-id-名查找" aria-hidden="true">#</a> （3）通过 id 名查找</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;#link1&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-组合查找" tabindex="-1"><a class="header-anchor" href="#_4-组合查找" aria-hidden="true">#</a> （4）组合查找</h3><p>组合查找即和写 class 文件时，标签名与类名、id名进行的组合原理是一样的，例如查找 p 标签中，id 等于 link1的内容，二者需要用空格分开</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;p #link1&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>直接子标签查找，则使用 <code>&gt;</code> 分隔</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&quot;head &gt; title&quot;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-属性查找" tabindex="-1"><a class="header-anchor" href="#_5-属性查找" aria-hidden="true">#</a> （5）属性查找</h3><p>查找时还可以加入属性元素，属性需要用中括号括起来，注意属性和标签属于同一节点，所以中间不能加空格，否则会无法匹配到。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;a[class=&quot;sister&quot;]&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span>

<span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;a[href=&quot;http://example.com/elsie&quot;]&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样，属性仍然可以与上述查找方式组合，不在同一节点的空格隔开，同一节点的不加空格</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;p a[href=&quot;http://example.com/elsie&quot;]&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-获取内容" tabindex="-1"><a class="header-anchor" href="#_6-获取内容" aria-hidden="true">#</a> (6) 获取内容</h3><p>以上的 select 方法返回的结果都是列表形式，可以遍历形式输出，然后用 get_text() 方法来获取它的内容。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">&#39;lxml&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token builtin">type</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> title <span class="token keyword">in</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span> title<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="案例-使用beautifusoup4的爬虫" tabindex="-1"><a class="header-anchor" href="#案例-使用beautifusoup4的爬虫" aria-hidden="true">#</a> 案例：使用BeautifuSoup4的爬虫</h2><blockquote><p>喜欢这篇文章的话，可以关注一下我的公众号『<strong>海哥python</strong>』</p></blockquote>`,92);function b(q,y){const a=p("ExternalLinkIcon");return o(),l("div",null,[u,r,d,s("blockquote",null,[k,s("p",null,[n("BeautifulSoup 用来解析 HTML 比较简单，API非常人性化，支持"),s("a",m,[n("CSS选择器"),t(a)]),n("、Python标准库中的HTML解析器，也支持 lxml 的 XML解析器。")]),v,s("p",null,[n("官方文档："),s("a",g,[n("http://beautifulsoup.readthedocs.io/zh_CN/v4.4.0"),t(a)])])]),h])}const w=e(i,[["render",b],["__file","9.BeautifulSoup4解析器.html.vue"]]);export{w as default};
