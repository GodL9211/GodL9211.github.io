const e=JSON.parse('{"key":"v-2983f99c","path":"/docs/python/%E7%88%AC%E8%99%AB/9.BeautifulSoup4%E8%A7%A3%E6%9E%90%E5%99%A8.html","title":"9.BeautifulSoup4解析器","lang":"zh-CN","frontmatter":{"title":"9.BeautifulSoup4解析器","icon":"book","order":9,"index":true,"article":false,"description":"前言 大家好，我是海鸽。 和 lxml 一样，Beautiful Soup 也是一个HTML/XML的解析器，主要的功能也是如何解析和提取 HTML/XML 数据。\\r lxml 只会局部遍历，而Beautiful Soup 是基于HTML DOM的，会载入整个文档，解析整个DOM树，因此时间和内存开销都会大很多，所以性能要低于lxml。\\r Beauti...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/docs/python/%E7%88%AC%E8%99%AB/9.BeautifulSoup4%E8%A7%A3%E6%9E%90%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"暴走の海鸽"}],["meta",{"property":"og:title","content":"9.BeautifulSoup4解析器"}],["meta",{"property":"og:description","content":"前言 大家好，我是海鸽。 和 lxml 一样，Beautiful Soup 也是一个HTML/XML的解析器，主要的功能也是如何解析和提取 HTML/XML 数据。\\r lxml 只会局部遍历，而Beautiful Soup 是基于HTML DOM的，会载入整个文档，解析整个DOM树，因此时间和内存开销都会大很多，所以性能要低于lxml。\\r Beauti..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-17T10:24:44.000Z"}],["meta",{"property":"article:author","content":"Mr.暴走の海鸽"}],["meta",{"property":"article:modified_time","content":"2024-07-17T10:24:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"9.BeautifulSoup4解析器\\",\\"description\\":\\"前言 大家好，我是海鸽。 和 lxml 一样，Beautiful Soup 也是一个HTML/XML的解析器，主要的功能也是如何解析和提取 HTML/XML 数据。\\\\r lxml 只会局部遍历，而Beautiful Soup 是基于HTML DOM的，会载入整个文档，解析整个DOM树，因此时间和内存开销都会大很多，所以性能要低于lxml。\\\\r Beauti...\\"}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"示例：","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"四大对象种类","slug":"四大对象种类","link":"#四大对象种类","children":[{"level":3,"title":"1. Tag","slug":"_1-tag","link":"#_1-tag","children":[]},{"level":3,"title":"2. NavigableString","slug":"_2-navigablestring","link":"#_2-navigablestring","children":[]},{"level":3,"title":"3. BeautifulSoup","slug":"_3-beautifulsoup","link":"#_3-beautifulsoup","children":[]},{"level":3,"title":"4. Comment","slug":"_4-comment","link":"#_4-comment","children":[]}]},{"level":2,"title":"遍历文档树","slug":"遍历文档树","link":"#遍历文档树","children":[{"level":3,"title":"1. 直接子节点 ：.contents .children 属性","slug":"_1-直接子节点-contents-children-属性","link":"#_1-直接子节点-contents-children-属性","children":[]},{"level":3,"title":"2. 所有子孙节点: .descendants 属性","slug":"_2-所有子孙节点-descendants-属性","link":"#_2-所有子孙节点-descendants-属性","children":[]},{"level":3,"title":"3. 节点内容: .string 属性","slug":"_3-节点内容-string-属性","link":"#_3-节点内容-string-属性","children":[]}]},{"level":2,"title":"搜索文档树","slug":"搜索文档树","link":"#搜索文档树","children":[{"level":3,"title":"1.find_all(name, attrs, recursive, text, **kwargs)","slug":"_1-find-all-name-attrs-recursive-text-kwargs","link":"#_1-find-all-name-attrs-recursive-text-kwargs","children":[]}]},{"level":2,"title":"CSS选择器","slug":"css选择器","link":"#css选择器","children":[{"level":3,"title":"（1）通过标签名查找","slug":"_1-通过标签名查找","link":"#_1-通过标签名查找","children":[]},{"level":3,"title":"（2）通过类名查找","slug":"_2-通过类名查找","link":"#_2-通过类名查找","children":[]},{"level":3,"title":"（3）通过 id 名查找","slug":"_3-通过-id-名查找","link":"#_3-通过-id-名查找","children":[]},{"level":3,"title":"（4）组合查找","slug":"_4-组合查找","link":"#_4-组合查找","children":[]},{"level":3,"title":"（5）属性查找","slug":"_5-属性查找","link":"#_5-属性查找","children":[]},{"level":3,"title":"(6) 获取内容","slug":"_6-获取内容","link":"#_6-获取内容","children":[]}]},{"level":2,"title":"案例：使用BeautifuSoup4的爬虫","slug":"案例-使用beautifusoup4的爬虫","link":"#案例-使用beautifusoup4的爬虫","children":[]}],"git":{"createdTime":1721211884000,"updatedTime":1721211884000,"contributors":[{"name":"lianhaifeng","email":"lianhaifeng@rongannetworks.com","commits":1}]},"readingTime":{"minutes":9.99,"words":2997},"filePathRelative":"docs/python/爬虫/9.BeautifulSoup4解析器.md","localizedDate":"2024年7月17日","excerpt":"","autoDesc":true}');export{e as data};
