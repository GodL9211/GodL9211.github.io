import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as s,e,f as t}from"./app-9976b6d0.js";const c="/assets/661-0e73afc4.webp",r="/assets/662-6c9003e3.webp",u="/assets/663-877ef7b8.webp",d="/assets/664-07cabceb.webp",k="/assets/665-46556dd2.webp",m="/assets/666-3dd8515b.webp",v="/assets/667-6e50ebc2.webp",b="/assets/668-17ec0f38.webp",_="/assets/669-f2039cdf.webp",g="/assets/670-4cf53838.webp",f="/assets/671-2e35cb89.webp",h="/assets/672-8602e62d.webp",q={},y=t('<p>学习爬虫的过程中，一般都会接触到一些框架，常见的比如 Scrapy、Pyspider 等等，不同的框架都有着各自的特点。不过就上述两款爬虫框架而言，Pyspider 久未维护，且安装到使用的过程较为坎坷；Scrapy 生态良好，功能丰富，但是对于初学者来说，学习成本相对较高。feapder 框架近年来较为火热，正好也有群友提到了：</p><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>因此，本期将讲解一款上手更为简单，功能同样强大的爬虫框架 —— feapder。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>feapder 是一款上手简单，功能强大的 Python 爬虫框架。内置 AirSpider、Spider、TaskSpider、BatchSpider 四种爬虫解决不同场景的需求：</p><ul><li>AirSpider：轻量级爬虫，适合简单场景、数据量少的爬虫；</li><li>Spider：分布式爬虫，基于 Redis，适用于海量数据，并且支持断点续爬、自动数据入库等功能；</li><li>TaskSpider：任务型爬虫，支持对接任务表，如 mysql、redis 等；</li><li>BatchSpider：分布式批次爬虫，主要用于需要周期性采集的爬虫。</li></ul><p>feapder 支持断点续爬、监控报警、浏览器渲染、海量数据去重等功能。更有功能强大的爬虫管理系统 Feaplat 为其提供方便的部署及调度。</p><p>feapder 官方资料：</p>',8),x={href:"https://github.com/Boris-code/feapder",target:"_blank",rel:"noopener noreferrer"},S={href:"https://feapder.com/",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,"官方公众号：feader爬虫教程",-1),R=t('<h2 id="架构设计" tabindex="-1"><a class="header-anchor" href="#架构设计" aria-hidden="true">#</a> 架构设计</h2><h3 id="官方框架流程图" tabindex="-1"><a class="header-anchor" href="#官方框架流程图" aria-hidden="true">#</a> <strong>官方框架流程图</strong></h3><figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="模块说明" tabindex="-1"><a class="header-anchor" href="#模块说明" aria-hidden="true">#</a> <strong>模块说明</strong></h3><figure><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/POicI8TV3kTrUibdWS63O1D9JhsSsD9FxvL1s5xY7MW02GUa9Uy0tzE5IUsibeGicJViawqIeFibV4dvjajZ6JvibDVuA/640?wx_fmt=png&amp;from=appmsg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h3 id="流程说明" tabindex="-1"><a class="header-anchor" href="#流程说明" aria-hidden="true">#</a> <strong>流程说明</strong></h3><p>根据上文框架流程图，按流程序号分析功能：</p><blockquote><ol><li>spider 调度 start_request 生产任务；</li><li>start_request 下发任务到 request_buffer 中；</li><li>spider 调度 request_buffer 批量将任务存储到任务队列数据库中；</li><li>spider 调度 collector 从任务队列中批量获取任务到内存队列；</li><li>spider 调度 parser_control 从 collector 的内存队列中获取任务；</li><li>parser_control 调度 request 请求数据；</li><li>request 请求与下载数据；</li><li>request 将下载后的数据给 response，进一步封装；</li><li>将封装好的 response 返回给 parser_control（图示为多个 parser_control，表示多线程）；</li><li>parser_control 调度对应的 parser，解析返回的 response（图示多组 parser 表示不同的网站解析器）；</li><li>parser_control 将 parser 解析到的数据 item 及新产生的 request 分发到 item_buffer 与 request_buffer；</li><li>spider 调度 item_buffer 与 request_buffer 将数据批量入库。</li></ol></blockquote><h2 id="feapder-的使用" tabindex="-1"><a class="header-anchor" href="#feapder-的使用" aria-hidden="true">#</a> feapder 的使用</h2><h3 id="环境" tabindex="-1"><a class="header-anchor" href="#环境" aria-hidden="true">#</a> <strong>环境</strong></h3><ul><li>Python 3.6.0+</li><li>Works on Linux，Windows，macOS</li></ul><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> <strong>安装</strong></h3><p>① 精简版</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pip install feapder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不支持浏览器渲染、不支持基于内存去重、不支持入库 mongo。</p><p>② 浏览器渲染版</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pip install <span class="token string">&quot;feapder[render]&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不支持基于内存去重、不支持入库 mongo。</p><p>③ 完整版</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pip install <span class="token string">&quot;feapder[all]&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>支持所有功能。</p><p>常见安装问题：</p>`,22),E={href:"https://feapder.com/#/question/%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"},D=t('<p>安装成功，查看版本及可用命令：</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>eapder 支持 <code>create</code>、<code>retry</code>、<code>shell</code> 及 <code>zip</code> 四种命令，<code>feapder -h</code> 查看使用帮助。</p><p>详细资料：</p>',4),B={href:"https://feapder.com/#/command/cmdline",target:"_blank",rel:"noopener noreferrer"},A=t(`<h3 id="airspider" tabindex="-1"><a class="header-anchor" href="#airspider" aria-hidden="true">#</a> <strong>AirSpider</strong></h3><p>轻量爬虫，学习成本低，面对一些数据量较少，无需断点续爬，无需分布式采集的需求，可采用此爬虫。</p><p><strong>① 创建爬虫项目</strong></p><p>命令如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>feapder create <span class="token operator">-</span>p <span class="token operator">&lt;</span>project_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>和 Scrapy 一样，创建新项目时，会自动生成一系列的文件和目录结构，有助于理解与使用框架：</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>相关文件简介：</p>',9),T=n("li",null,"items：文件夹存放与数据库表映射的 item；",-1),M=n("li",null,"spiders：存放爬虫脚本的文件夹；",-1),z=n("li",null,"CHECK_DATA.md：数据审核建议；",-1),I={href:"http://main.py",target:"_blank",rel:"noopener noreferrer"},P={href:"http://setting.py",target:"_blank",rel:"noopener noreferrer"},F=t(`<p><strong>② 创建爬虫程序</strong></p><p>命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>feapder create <span class="token parameter variable">-s</span> <span class="token operator">&lt;</span>spider_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选择需要创建的爬虫模板，按上下键更换模版，这里选择 AirSpider 模板，回车即可创建成功：</p><figure><img src="`+m+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>代码样例如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Created on xxx
---------
@summary:
---------
@author: kg_spider
&quot;&quot;&quot;</span>

<span class="token keyword">import</span> feapder
<span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger


<span class="token keyword">class</span> <span class="token class-name">FeapderSpiderDemo</span><span class="token punctuation">(</span>feapder<span class="token punctuation">.</span>AirSpider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">yield</span> feapder<span class="token punctuation">.</span>Request<span class="token punctuation">(</span><span class="token string">&quot;https://www.kuaidaili.com/free&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 提取网站 title</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//title/text()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 提取网站描述</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;网站地址: </span><span class="token interpolation"><span class="token punctuation">{</span>response<span class="token punctuation">.</span>url<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    FeapderSpiderDemo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>feapder.AirSpider：轻量爬虫基类；</li><li>start_requests：初始任务下发入口；</li><li>feapder.Request：基于 requests 库类似，表示一个请求，支持 requests 所有参数，同时也可携带些自定义的参数；</li><li>parser：数据解析函数；</li><li>response：请求响应的返回体，支持 xpath、re、css 等解析方式。</li></ul><p>运行结果：</p><figure><img src="`+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',10),N={href:"http://requests.py",target:"_blank",rel:"noopener noreferrer"},C=t('<figure><img src="'+b+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>③ AirSpider 的基本使用方法</strong></p><p>如果需要解析的函数不止一个的话，可以自定义解析函数（默认失败重试 10 次）、下载中间件（cookies、headers 等）以及失败重试等等，囊括在下面的代码样例中：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Created on xxx
---------
@summary:
---------
@author: kg_spider
&quot;&quot;&quot;</span>

<span class="token keyword">import</span> feapder
<span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger


<span class="token keyword">class</span> <span class="token class-name">FeapderSpiderDemo</span><span class="token punctuation">(</span>feapder<span class="token punctuation">.</span>AirSpider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 自定义配置项</span>
    __custom_setting__ <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>
        SPIDER_MAX_RETRY_TIMES<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">yield</span> feapder<span class="token punctuation">.</span>Request<span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com&quot;</span><span class="token punctuation">,</span> download_midware<span class="token operator">=</span>self<span class="token punctuation">.</span>download_midware<span class="token punctuation">)</span>  <span class="token comment"># 不指定 callback, 任务会调度默认的 parser 上</span>
        <span class="token keyword">yield</span> feapder<span class="token punctuation">.</span>Request<span class="token punctuation">(</span><span class="token string">&quot;https://www.kuaidaili.com/free&quot;</span><span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>spider_kdl<span class="token punctuation">)</span>  <span class="token comment"># 指定了 callback, 任务由 callback 指定的函数解析</span>

    <span class="token keyword">def</span> <span class="token function">download_midware</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        下载中间件

        在请求之前, 对请求做一些处理, 如添加 cookie、header 等
        &quot;&quot;&quot;</span>
        <span class="token comment"># 添加 headers</span>
        request<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36 Edg/126.0.0.0&quot;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> request

    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 提取网站 title</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//title/text()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 提取网站描述</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;网站地址: </span><span class="token interpolation"><span class="token punctuation">{</span>response<span class="token punctuation">.</span>url<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token comment"># 异常重试</span>
        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">&quot;未正常获取到有效页面&quot;</span><span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@staticmethod</span>
    <span class="token keyword">def</span> <span class="token function">spider_kdl</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 提取网站 title</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//title/text()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 提取网站描述</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;网站地址: </span><span class="token interpolation"><span class="token punctuation">{</span>response<span class="token punctuation">.</span>url<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    FeapderSpiderDemo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><figure><img src="`+_+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>feapder 框架内置了能够停止整个爬虫程序的方法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> feapder


<span class="token keyword">class</span> <span class="token class-name">AirTest</span><span class="token punctuation">(</span>feapder<span class="token punctuation">.</span>AirSpider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">yield</span> feapder<span class="token punctuation">.</span>Request<span class="token punctuation">(</span><span class="token string">&quot;https://www.kuaidaili.com/free&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>stop_spider<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 停止爬虫，可以在任意地方调用该方法</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    AirTest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>④ 数据入库</strong></p><p>feapder 框架内封装了 <code>MysqlDB</code>、<code>RedisDB</code>，与 pymysql 不同的是，MysqlDB 使用了线程池，且对方法进行了封装，使用起来更方便：</p><ul><li><strong>线程池</strong>：MysqlDB 使用了线程池来管理数据库连接。这意味着在执行数据库操作时，可以复用现有的数据库连接，而不是每次操作都新建一个连接，从而提高了性能和效率，特别是在高并发场景下。</li><li><strong>方法封装</strong>：MysqlDB 对常用的数据库操作进行了封装，使得开发者可以更简便地进行增删改查等操作，而不需要直接编写繁琐的 SQL 语句。</li></ul><p>MysqlDB 具有断开自动重连特性，支持多线程下操作，内置连接池，最大连接数 100。同时，封装了增删改查等方法，使相关操做更为方便，可自行测试。</p>`,12),O={href:"https://feapder.com/#/source_code/MysqlDB",target:"_blank",rel:"noopener noreferrer"},L=n("p",null,"RedisDB 支持普通模式（单节点）、哨兵模式、集群模式：",-1),U=n("ul",null,[n("li",null,[n("strong",null,"哨兵模式"),s("：RedisDB 支持 Redis 的哨兵模式（Sentinel），这是一种用于实现高可用性的 Redis 配置，可以自动监测主从实例的状态并在主实例发生故障时自动完成主从切换。")]),n("li",null,[n("strong",null,"集群模式"),s("：RedisDB 也支持 Redis 集群模式，这是一种用于分布式存储的 Redis 配置，可以将数据分布在多个 Redis 节点上，从而实现水平扩展和高可用性。")])],-1),V={href:"https://feapder.com/#/source_code/RedisDB",target:"_blank",rel:"noopener noreferrer"},H=t(`<p>基本使用方法如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> feapder
<span class="token keyword">from</span> feapder<span class="token punctuation">.</span>db<span class="token punctuation">.</span>mysqldb <span class="token keyword">import</span> MysqlDB
<span class="token keyword">from</span> feapder<span class="token punctuation">.</span>db<span class="token punctuation">.</span>redisdb <span class="token keyword">import</span> RedisDB

<span class="token keyword">class</span> <span class="token class-name">AirSpiderTest</span><span class="token punctuation">(</span>feapder<span class="token punctuation">.</span>AirSpider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    __custom_setting__ <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>
        MYSQL_IP<span class="token operator">=</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
        MYSQL_PORT <span class="token operator">=</span> <span class="token number">3306</span><span class="token punctuation">,</span>
        MYSQL_DB <span class="token operator">=</span> <span class="token string">&quot;kgspider&quot;</span><span class="token punctuation">,</span>
        MYSQL_USER_NAME <span class="token operator">=</span> <span class="token string">&quot;spider123&quot;</span><span class="token punctuation">,</span>
        MYSQL_USER_PASS <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span>
    <span class="token punctuation">)</span>
    
    
<span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>db <span class="token operator">=</span> MysqlDB<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑤ 线程数配置</strong></p><p>框架默认的线程数为 1，但在正常业务中，基本不可能只采用单线程的工作方式进行数据采集，feapder 的多线程配置有几种方式：</p><p>1、在启动函数中传递线程数：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    AirSpiderTest<span class="token punctuation">(</span>thread_count<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6),W={href:"http://setting.py",target:"_blank",rel:"noopener noreferrer"},Y=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>SPIDER_THREAD_COUNT <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment"># 爬虫并发数，追求速度推荐 32</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、 在程序脚本中，使用类变量 <code>__custom_setting__</code> 自定义配置项：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> feapder


<span class="token keyword">class</span> <span class="token class-name">SpiderTest</span><span class="token punctuation">(</span>feapder<span class="token punctuation">.</span>AirSpider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    __custom_setting__ <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>
        SPIDER_THREAD_COUNT<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),Q={href:"http://setting.py",target:"_blank",rel:"noopener noreferrer"},G=t('<p>feapder 框架还支持浏览器（Chrome、Edge、PhantomJS、Firefox）渲染采集（自动化）的方式，功能很全面：</p><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 浏览器渲染</span>
WEBDRIVER <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>
    pool_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token comment"># 浏览器的数量</span>
    load_images<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token comment"># 是否加载图片</span>
    user_agent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>  <span class="token comment"># 字符串 或 无参函数，返回值为 user_agent</span>
    proxy<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>  <span class="token comment"># xxx.xxx.xxx.xxx:xxxx 或 无参函数，返回值为代理地址</span>
    headless<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>  <span class="token comment"># 是否为无头浏览器</span>
    driver_type<span class="token operator">=</span><span class="token string">&quot;CHROME&quot;</span><span class="token punctuation">,</span>  <span class="token comment"># CHROME、EDGE、PHANTOMJS、FIREFOX</span>
    timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>  <span class="token comment"># 请求超时时间</span>
    window_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 窗口大小</span>
    executable_path<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>  <span class="token comment"># 浏览器路径，默认为默认路径</span>
    render_time<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment"># 渲染时长，即打开网页等待指定时间后再获取源码</span>
    custom_argument<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;--ignore-certificate-errors&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment"># 自定义浏览器渲染参数</span>
    xhr_url_regexes<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>  <span class="token comment"># 拦截 xhr 接口，支持正则，数组类型</span>
    auto_install_driver<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>  <span class="token comment"># 自动下载浏览器驱动 支持 chrome 和 firefox</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),J={href:"https://feapder.com/#/source_code/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93-Selenium",target:"_blank",rel:"noopener noreferrer"},j=n("p",null,"更详细的功能介绍，推荐阅读官方文档，就不在此赘述了：",-1),K={href:"https://feapder.com/#/usage/AirSpider",target:"_blank",rel:"noopener noreferrer"},X={href:"https://feapder.com/#/source_code/Request",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://feapder.com/#/source_code/Response",target:"_blank",rel:"noopener noreferrer"},$=t(`<h3 id="spider" tabindex="-1"><a class="header-anchor" href="#spider" aria-hidden="true">#</a> <strong>Spider</strong></h3><p>Spider 是一款基于 redis 的分布式爬虫，适用于海量数据采集，支持断点续爬、爬虫报警、数据自动入库等功能。</p><p><strong>① 创建爬虫项目</strong></p><p>与 AirSpider 相同，命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>feapder create <span class="token parameter variable">-p</span> <span class="token operator">&lt;</span>project_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>② 创建爬虫程序</strong></p><p>命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>feapder create <span class="token parameter variable">-s</span> <span class="token operator">&lt;</span>spider_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选择需要创建的爬虫模板，按上下键更换模版，这里选择 Spider 模板，回车即可创建成功：</p><figure><img src="`+f+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>代码样例如下，默认给了 redis 的配置方式，连接信息需按真实情况修改：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Created on xxx
---------
@summary:
---------
@author: kg_spider
&quot;&quot;&quot;</span>

<span class="token keyword">import</span> feapder


<span class="token keyword">class</span> <span class="token class-name">FeapderSpiderDemo</span><span class="token punctuation">(</span>feapder<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 自定义数据库，若项目中有 setting.py 文件，此自定义可删除</span>
    __custom_setting__ <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>
        REDISDB_IP_PORTS<span class="token operator">=</span><span class="token string">&quot;localhost:6379&quot;</span><span class="token punctuation">,</span> REDISDB_USER_PASS<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> REDISDB_DB<span class="token operator">=</span><span class="token number">0</span>
    <span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">yield</span> feapder<span class="token punctuation">.</span>Request<span class="token punctuation">(</span><span class="token string">&quot;https://www.kuaidaili.com/free&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 提取网站 title</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//title/text()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token comment"># 创建爬虫实例并启动爬虫</span>
    <span class="token comment"># redis_key 用于在 Redis 中存储请求队列和其他任务相关信息</span>
    FeapderSpiderDemo<span class="token punctuation">(</span>redis_key<span class="token operator">=</span><span class="token string">&quot;xxx:xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置信息：</p><ul><li>REDISDB_IP_PORTS：Redis 服务器的连接地址。若为集群或哨兵模式，多个连接地址用逗号分开，若为哨兵模式，需要加个 REDISDB_SERVICE_NAME 参数；</li><li>REDISDB_USER_PASS：Redis 服务器的连接密码；</li><li>REDISDB_DB：使用 Redis 的默认数据库，通常是 0。Redis 支持多数据库索引（从 0 到 15），可以通过更改此值来选择不同的数据库。</li></ul><p>Spider 支持断点续爬，其利用了 redis 有序集合来存储任务，有序集合有个分数，爬虫取任务时，只取小于当前时间戳分数的任务，同时将任务分数修改为当前时间戳 +10 分钟（可自行配置），（这个取任务与改分数是原子性的操作）。当任务做完时，且数据已入库后，再主动将任务删除。</p><p>Spider 任务请求失败或解析函数抛出异常时，会自动重试，默认重试次数为 100 次（可自行配置）。当任务超过最大重试次数时，默认会将失败的任务存储到 redis 的 {redis_key}😒_failed_requsets 里，以供排查。</p><p>更详细的功能介绍，建议阅读官方文档：</p>`,17),nn={href:"https://feapder.com/#/usage/Spider",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://feapder.com/#/source_code/Spider%E8%BF%9B%E9%98%B6",target:"_blank",rel:"noopener noreferrer"},an=n("h3",{id:"taskspider、batchspider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#taskspider、batchspider","aria-hidden":"true"},"#"),s(),n("strong",null,"TaskSpider、BatchSpider")],-1),en=n("p",null,[n("strong",null,"TaskSpider"),s("：一款分布式爬虫，内部封装了取种子任务的逻辑，内置支持从 redis 或者 mysql 获取任务，也可通过自定义实现从其他来源获取任务。")],-1),tn=n("p",null,[n("strong",null,"BatchSpider"),s("：一款分布式批次爬虫，对于需要周期性采集的数据，优先考虑使用本爬虫。会自动维护个批次信息表，详细的记录了每个批次时间、任务完成情况、批次周期等信息。会维护个批次时间信息，本批次未完成下一批次不会开始。")],-1),pn=n("ul",null,[n("li",null,"批次的含义：例如 2024.07.05 开始采集，2024.07.08 才采集完成，此间数据的批次都为 2024.07.05。方便业务做时序数据展示。")],-1),on=n("p",null,"四种爬虫模板：AirSpider -> Spider -> TaskSpider -> BatchSpider，后一种都是基于前一种的优化，具体的使用说明，官方文档都写的很清楚了：",-1),ln={href:"https://feapder.com/#/usage/TaskSpider",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://feapder.com/#/usage/BatchSpider",target:"_blank",rel:"noopener noreferrer"},rn=n("h3",{id:"数据监控",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数据监控","aria-hidden":"true"},"#"),s(),n("strong",null,"数据监控")],-1),un=n("p",null,"feapder 还有配套的爬虫管理系统 ------ feaplat（暂时不支持 Apple 芯片），可以通过 docker 安装部署：",-1),dn={href:"https://feapder.com/#/feapder_platform/feaplat",target:"_blank",rel:"noopener noreferrer"},kn=n("p",null,"feapder 内置监控打点（feapder 版本大于等于 1.6.6），部署到 feaplat 爬虫管理系统即可实现对请求和数据监控：",-1),mn=n("figure",null,[n("img",{src:h,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),vn={href:"https://feapder.com/#/source_code/%E7%9B%91%E6%8E%A7%E6%89%93%E7%82%B9",target:"_blank",rel:"noopener noreferrer"};function bn(_n,gn){const a=o("ExternalLinkIcon");return i(),l("div",null,[y,n("blockquote",null,[n("p",null,[s("GitHub："),n("a",x,[s("https://github.com/Boris-code/feapder"),e(a)])]),n("p",null,[s("官方文档："),n("a",S,[s("https://feapder.com/"),e(a)])]),w]),R,n("blockquote",null,[n("p",null,[n("a",E,[s("https://feapder.com/#/question/安装问题"),e(a)])])]),D,n("blockquote",null,[n("p",null,[n("a",B,[s("https://feapder.com/#/command/cmdline"),e(a)])])]),A,n("ul",null,[T,M,z,n("li",null,[n("a",I,[s("main.py"),e(a)]),s("：运行入口（附代码样例）；")]),n("li",null,[n("a",P,[s("setting.py"),e(a)]),s("：详细的框架配置文件。")])]),F,n("p",null,[s("可以看到，默认会输出请求链接（url）、请求方式（method）以及请求头相关信息（args），不需要的可以跟进到 "),n("a",N,[s("requests.py"),e(a)]),s(" 文件中，将 log 部分注释掉即可：")]),C,n("blockquote",null,[n("p",null,[s("MysqlDB："),n("a",O,[s("https://feapder.com/#/source_code/MysqlDB"),e(a)])])]),L,U,n("blockquote",null,[n("p",null,[s("RedisDB："),n("a",V,[s("https://feapder.com/#/source_code/RedisDB"),e(a)])])]),H,n("p",null,[s("2、在配置文件 "),n("a",W,[s("setting.py"),e(a)]),s(" 中更改对应的配置项：")]),Y,n("p",null,[s("在程序脚本中自定义配置项，优先级会大于在 "),n("a",Q,[s("setting.py"),e(a)]),s(" 中设置。")]),G,n("blockquote",null,[n("p",null,[s("相关文档："),n("a",J,[s("https://feapder.com/#/source_code/浏览器渲染-Selenium"),e(a)])])]),j,n("blockquote",null,[n("p",null,[s("AirSpider："),n("a",K,[s("https://feapder.com/#/usage/AirSpider"),e(a)])]),n("p",null,[s("Request："),n("a",X,[s("https://feapder.com/#/source_code/Request"),e(a)])]),n("p",null,[s("Response："),n("a",Z,[s("https://feapder.com/#/source_code/Response"),e(a)])])]),$,n("blockquote",null,[n("p",null,[s("Spider："),n("a",nn,[s("https://feapder.com/#/usage/Spider"),e(a)])]),n("p",null,[s("Spider 进阶："),n("a",sn,[s("https://feapder.com/#/source_code/Spider进阶"),e(a)])])]),an,en,tn,pn,on,n("blockquote",null,[n("p",null,[s("TaskSpider："),n("a",ln,[s("https://feapder.com/#/usage/TaskSpider"),e(a)])]),n("p",null,[s("BatchSpider："),n("a",cn,[s("https://feapder.com/#/usage/BatchSpider"),e(a)])])]),rn,un,n("blockquote",null,[n("p",null,[n("a",dn,[s("https://feapder.com/#/feapder_platform/feaplat"),e(a)])])]),kn,mn,n("p",null,[s("监控打点："),n("a",vn,[s("https://feapder.com/#/source_code/监控打点"),e(a)])])])}const qn=p(q,[["render",bn],["__file","18.feapder框架.html.vue"]]);export{qn as default};
