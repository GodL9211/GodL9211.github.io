const e=JSON.parse('{"key":"v-59cc3e48","path":"/docs/golang/golang-base/21.%E5%8D%8F%E7%A8%8B.html","title":"21.协程","lang":"zh-CN","frontmatter":{"title":"21.协程","icon":"book","index":true,"article":false,"description":"协程特性 在Go语言中，协程（goroutine）是一种轻量级的线程，由Go运行时系统管理。协程通过go关键字启动，可以理解为一种并发执行的函数。以下是Golang中协程的一些功能特性： 1. 轻量级：协程是轻量级的线程，相对于传统的线程而言，创建和销毁的开销非常小。因此，可以创建数千甚至数百万个协程而不会导致系统资源的枯竭。 ```go func m...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/docs/golang/golang-base/21.%E5%8D%8F%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"暴走の海鸽"}],["meta",{"property":"og:title","content":"21.协程"}],["meta",{"property":"og:description","content":"协程特性 在Go语言中，协程（goroutine）是一种轻量级的线程，由Go运行时系统管理。协程通过go关键字启动，可以理解为一种并发执行的函数。以下是Golang中协程的一些功能特性： 1. 轻量级：协程是轻量级的线程，相对于传统的线程而言，创建和销毁的开销非常小。因此，可以创建数千甚至数百万个协程而不会导致系统资源的枯竭。 ```go func m..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-12T10:26:58.000Z"}],["meta",{"property":"article:author","content":"Mr.暴走の海鸽"}],["meta",{"property":"article:modified_time","content":"2023-10-12T10:26:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"21.协程\\",\\"description\\":\\"协程特性 在Go语言中，协程（goroutine）是一种轻量级的线程，由Go运行时系统管理。协程通过go关键字启动，可以理解为一种并发执行的函数。以下是Golang中协程的一些功能特性： 1. 轻量级：协程是轻量级的线程，相对于传统的线程而言，创建和销毁的开销非常小。因此，可以创建数千甚至数百万个协程而不会导致系统资源的枯竭。 ```go func m...\\"}"]]},"headers":[{"level":2,"title":"协程特性","slug":"协程特性","link":"#协程特性","children":[]},{"level":2,"title":"协程防坑指南","slug":"协程防坑指南","link":"#协程防坑指南","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1697106418000,"updatedTime":1697106418000,"contributors":[{"name":"lianhaifeng","email":"lianhaifeng@rongannetworks.com","commits":1}]},"readingTime":{"minutes":4.41,"words":1322},"filePathRelative":"docs/golang/golang-base/21.协程.md","localizedDate":"2023年10月12日","excerpt":"","autoDesc":true}');export{e as data};
