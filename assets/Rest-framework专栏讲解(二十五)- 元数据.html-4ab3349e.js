import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c,a as n,b as s,e,f as t}from"./app-7702e136.js";const l={},u=t('<h1 id="rest-framework专栏讲解-二十五-元数据" tabindex="-1"><a class="header-anchor" href="#rest-framework专栏讲解-二十五-元数据" aria-hidden="true">#</a> Rest-framework专栏讲解(二十五): 元数据</h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a><ul><li><a href="#%E8%AE%BE%E7%BD%AE%E5%85%83%E6%95%B0%E6%8D%AE-scheme">设置元数据 scheme</a></li><li><a href="#%E5%88%9B%E5%BB%BA-schema-%E7%AB%AF%E7%82%B9">创建 schema 端点</a></li></ul></li><li><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%83%E6%95%B0%E6%8D%AE%E7%B1%BB">自定义元数据类</a><ul><li><a href="#%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90">举个栗子</a></li></ul></li></ul>',3),r={href:"http://www.django-rest-framework.org/api-guide/metadata/",title:"官方原文链接",target:"_blank",rel:"noopener noreferrer"},d={id:"元数据",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#元数据","aria-hidden":"true"},"#",-1),m={href:"http://drf.jiuyou.info/#/drf/metadata?id=%E5%85%83%E6%95%B0%E6%8D%AE",title:"元数据",target:"_blank",rel:"noopener noreferrer"},v=t(`<p>REST framework 包含一个可配置的机制，用于确定 API 如何响应 <code>OPTIONS</code> 请求。这使你可以返回 API schema 或其他资源信息。</p><p>对于 HTTP <code>OPTIONS</code> 请求应该返回哪种风格的响应，目前还没有任何被广泛采用的约定，所以我们提供了一种专门的风格来返回一些有用的信息。</p><p>下面是一个示例响应，演示默认返回的信息。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>HTTP <span class="token number">200</span> OK
Allow<span class="token punctuation">:</span> GET<span class="token punctuation">,</span> POST<span class="token punctuation">,</span> HEAD<span class="token punctuation">,</span> OPTIONS
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> application<span class="token operator">/</span>json

<span class="token punctuation">{</span>
    <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;To Do List&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;description&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;List existing &#39;To Do&#39; items, or create a new item.&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;renders&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;text/html&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;parses&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;multipart/form-data&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;actions&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;POST&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;note&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;required&quot;</span><span class="token punctuation">:</span> false<span class="token punctuation">,</span>
                <span class="token string">&quot;read_only&quot;</span><span class="token punctuation">:</span> false<span class="token punctuation">,</span>
                <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;max_length&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),h={id:"设置元数据-scheme",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#设置元数据-scheme","aria-hidden":"true"},"#",-1),b={href:"http://drf.jiuyou.info/#/drf/metadata?id=%E8%AE%BE%E7%BD%AE%E5%85%83%E6%95%B0%E6%8D%AE-scheme",title:"设置元数据 scheme",target:"_blank",rel:"noopener noreferrer"},E=t(`<p>你可以使用 <code>DEFAULT_METADATA_CLASS</code> 在settings文件中全局设置元数据类：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_METADATA_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rest_framework.metadata.SimpleMetadata&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者你可以单独设置一个视图的元数据类：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">APIRoot</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    metadata_class <span class="token operator">=</span> APIRootMetadata

    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>REST framework 包只包含一个名为 <code>SimpleMetadata</code> 的元数据类实现。如果你想使用另一种风格，你需要实现一个自定义的元数据类。</p>`,5),f={id:"创建-schema-端点",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#创建-schema-端点","aria-hidden":"true"},"#",-1),q={href:"http://drf.jiuyou.info/#/drf/metadata?id=%E5%88%9B%E5%BB%BA-schema-%E7%AB%AF%E7%82%B9",title:"创建 schema 端点",target:"_blank",rel:"noopener noreferrer"},A=t(`<p>如果你对创建通过常规 GET 请求访问的 schema 端点有特定要求，则可以考虑重新使用元数据 API 来实现此目的。</p><p>例如，可以在视图集上使用以下附加路由来提供可链接的 schema 端点。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@list_route</span><span class="token punctuation">(</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">schema</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    meta <span class="token operator">=</span> self<span class="token punctuation">.</span>metadata_class<span class="token punctuation">(</span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> meta<span class="token punctuation">.</span>determine_metadata<span class="token punctuation">(</span>request<span class="token punctuation">,</span> self<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有几个原因可以选择采用这种方法，包括 <code>OPTIONS</code> 响应不能缓存。</p><hr>`,5),B={id:"自定义元数据类",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#自定义元数据类","aria-hidden":"true"},"#",-1),w={href:"http://drf.jiuyou.info/#/drf/metadata?id=%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%83%E6%95%B0%E6%8D%AE%E7%B1%BB",title:"自定义元数据类",target:"_blank",rel:"noopener noreferrer"},T=n("p",null,[s("如果你想提供一个自定义的元数据类，你应该继承 "),n("code",null,"BaseMetadata"),s(" 并且实现 "),n("code",null,"determine_metadata(self, request, view)"),s(" 方法。")],-1),x=n("p",null,"你可能想要做的事情包括返回 schema 信息，使用 JSON schema 等格式，或将调试信息返回给管理员用户。",-1),S={id:"举个栗子",tabindex:"-1"},D=n("a",{class:"header-anchor",href:"#举个栗子","aria-hidden":"true"},"#",-1),O={href:"http://drf.jiuyou.info/#/drf/metadata?id=%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90",title:"举个栗子",target:"_blank",rel:"noopener noreferrer"},P=t(`<p>以下类可用于限定返回到 <code>OPTIONS</code> 请求的信息。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MinimalMetadata</span><span class="token punctuation">(</span>BaseMetadata<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Don&#39;t include field and other information for \`OPTIONS\` requests.
    Just return the name and description.
    &quot;&quot;&quot;</span>
    <span class="token keyword">def</span> <span class="token function">determine_metadata</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> view<span class="token punctuation">.</span>get_view_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&#39;description&#39;</span><span class="token punctuation">:</span> view<span class="token punctuation">.</span>get_view_description<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后配置你的设置以使用此自定义类：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_METADATA_CLASS&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;myproject.apps.core.MinimalMetadata&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function R(I,M){const a=p("ExternalLinkIcon");return i(),c("div",null,[u,n("blockquote",null,[n("p",null,[n("a",r,[s("官方原文链接"),e(a)])])]),n("h1",d,[k,s(),n("a",m,[s("元数据"),e(a)])]),v,n("h2",h,[_,s(),n("a",b,[s("设置元数据 scheme"),e(a)])]),E,n("h2",f,[g,s(),n("a",q,[s("创建 schema 端点"),e(a)])]),A,n("h1",B,[y,s(),n("a",w,[s("自定义元数据类"),e(a)])]),T,x,n("h2",S,[D,s(),n("a",O,[s("举个栗子"),e(a)])]),P])}const L=o(l,[["render",R],["__file","Rest-framework专栏讲解(二十五)- 元数据.html.vue"]]);export{L as default};
