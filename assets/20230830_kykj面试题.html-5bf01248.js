const t=JSON.parse('{"key":"v-7140ea76","path":"/blog/20230830_kykj%E9%9D%A2%E8%AF%95%E9%A2%98.html","title":"python面试题(2)","lang":"zh-CN","frontmatter":{"title":"python面试题(2)","icon":"book","index":false,"article":true,"date":"2023-08-29T00:00:00.000Z","author":"深圳kykj-粉丝面试整理","description":"一、 使用python实现一个单例模式对象。 在 Python 中，你可以使用多种方法来实现单例模式，其中最常见的方法是使用装饰器或者元类。下面我会为你展示两种常见的实现方式：使用装饰器和使用元类。 1. 使用装饰器实现单例模式： ```python def singleton(cls): instances = {} def get_instance...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/blog/20230830_kykj%E9%9D%A2%E8%AF%95%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"暴走の海鸽"}],["meta",{"property":"og:title","content":"python面试题(2)"}],["meta",{"property":"og:description","content":"一、 使用python实现一个单例模式对象。 在 Python 中，你可以使用多种方法来实现单例模式，其中最常见的方法是使用装饰器或者元类。下面我会为你展示两种常见的实现方式：使用装饰器和使用元类。 1. 使用装饰器实现单例模式： ```python def singleton(cls): instances = {} def get_instance..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-31T10:07:09.000Z"}],["meta",{"property":"article:author","content":"深圳kykj-粉丝面试整理"}],["meta",{"property":"article:published_time","content":"2023-08-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-31T10:07:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"python面试题(2)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-31T10:07:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"深圳kykj-粉丝面试整理\\"}]}"]]},"headers":[{"level":2,"title":"一、 使用python实现一个单例模式对象。","slug":"一、-使用python实现一个单例模式对象。","link":"#一、-使用python实现一个单例模式对象。","children":[]},{"level":2,"title":"二、 请使用异步的方式（多进程/线程/协程等）循环交替打印A和B各50次。","slug":"二、-请使用异步的方式-多进程-线程-协程等-循环交替打印a和b各50次。","link":"#二、-请使用异步的方式-多进程-线程-协程等-循环交替打印a和b各50次。","children":[]},{"level":2,"title":"三、你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。","slug":"三、你是产品经理-目前正在带领一个团队开发新的产品。不幸的是-你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的-所以错误的版本之后的所有版本都是错的。","link":"#三、你是产品经理-目前正在带领一个团队开发新的产品。不幸的是-你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的-所以错误的版本之后的所有版本都是错的。","children":[]},{"level":2,"title":"四、请简述下python中的__new__和__init__的区别。","slug":"四、请简述下python中的-new-和-init-的区别。","link":"#四、请简述下python中的-new-和-init-的区别。","children":[]},{"level":2,"title":"五、请描述下Python的多线程管理。","slug":"五、请描述下python的多线程管理。","link":"#五、请描述下python的多线程管理。","children":[]},{"level":2,"title":"六、请列出Python中可变数据类型和不可变数据类型，CPython是如何实现的？","slug":"六、请列出python中可变数据类型和不可变数据类型-cpython是如何实现的","link":"#六、请列出python中可变数据类型和不可变数据类型-cpython是如何实现的","children":[]},{"level":2,"title":"七、请简述下python 协程的实现原理？协程一般适用于什么场景？","slug":"七、请简述下python-协程的实现原理-协程一般适用于什么场景","link":"#七、请简述下python-协程的实现原理-协程一般适用于什么场景","children":[]},{"level":2,"title":"八、请简述Python的垃圾回收机制。","slug":"八、请简述python的垃圾回收机制。","link":"#八、请简述python的垃圾回收机制。","children":[]}],"git":{"createdTime":1693476429000,"updatedTime":1693476429000,"contributors":[{"name":"lianhaifeng","email":"lianhaifeng@rongannetworks.com","commits":1}]},"readingTime":{"minutes":14.32,"words":4297},"filePathRelative":"blog/20230830_kykj面试题.md","localizedDate":"2023年8月29日","excerpt":"","autoDesc":true}');export{t as data};
