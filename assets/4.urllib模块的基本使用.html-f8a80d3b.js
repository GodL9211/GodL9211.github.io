import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-967d79b2.js";const p={},e=t(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>大家好，我是海鸽。今天我们来学习<code>python</code>发送请求的一个基本库<code>urllib</code> 。</p><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><p>Python 3 的 <code>urllib</code> 库是用于处理 URL 的一个标准库，它提供了一组用于处理网络 URL 的工具。以下是 <code>urllib</code> 库的一些基本用法：</p><h3 id="_1-urllib-request-—-用于发起网络请求" tabindex="-1"><a class="header-anchor" href="#_1-urllib-request-—-用于发起网络请求" aria-hidden="true">#</a> 1. urllib.request — 用于发起网络请求</h3><ul><li><p><strong>发送 HTTP 请求</strong>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request

response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">)</span>
html <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>发送带有数据的 HTTP 请求</strong>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">}</span>  
data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>使用 HTTP 头部</strong>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0&#39;</span><span class="token punctuation">}</span>
request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span><span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>使用代理</strong>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>proxy <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>ProxyHandler<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;http://proxyserver:port&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">,</span> proxy<span class="token operator">=</span>proxy<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-urllib-parse-—-解析和操作-url" tabindex="-1"><a class="header-anchor" href="#_2-urllib-parse-—-解析和操作-url" aria-hidden="true">#</a> 2. urllib.parse — 解析和操作 URL</h3><ul><li><p><strong>解析 URL</strong>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlparse

parsed_url <span class="token operator">=</span> urlparse<span class="token punctuation">(</span><span class="token string">&#39;http://www.example.com/path/to/page?name=value&amp;name2=value2&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>parsed_url<span class="token punctuation">.</span>scheme<span class="token punctuation">,</span> parsed_url<span class="token punctuation">.</span>netloc<span class="token punctuation">,</span> parsed_url<span class="token punctuation">.</span>path<span class="token punctuation">,</span> parsed_url<span class="token punctuation">.</span>query<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>构造 URL</strong>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlunparse

scheme<span class="token punctuation">,</span> netloc<span class="token punctuation">,</span> path<span class="token punctuation">,</span> params<span class="token punctuation">,</span> query<span class="token punctuation">,</span> fragment <span class="token operator">=</span> <span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;www.example.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/path/to/page&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name=value&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span>
url <span class="token operator">=</span> urlunparse<span class="token punctuation">(</span><span class="token punctuation">(</span>scheme<span class="token punctuation">,</span> netloc<span class="token punctuation">,</span> path<span class="token punctuation">,</span> params<span class="token punctuation">,</span> query<span class="token punctuation">,</span> fragment<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>编码查询字符串</strong>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlencode

query <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">}</span>
query_string <span class="token operator">=</span> urlencode<span class="token punctuation">(</span>query<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>query_string<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3-urllib-error-—-包含-url-处理过程中可能抛出的异常" tabindex="-1"><a class="header-anchor" href="#_3-urllib-error-—-包含-url-处理过程中可能抛出的异常" aria-hidden="true">#</a> 3. urllib.error — 包含 URL 处理过程中可能抛出的异常</h3><ul><li><p><strong>处理请求异常</strong>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> urllib<span class="token punctuation">.</span>error<span class="token punctuation">.</span>URLError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Failed to reach a server:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>处理 HTTP 错误</strong>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> urllib<span class="token punctuation">.</span>error<span class="token punctuation">.</span>HTTPError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;HTTP error occurred:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>code<span class="token punctuation">,</span> e<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_4-urllib-robotparser-—-解析-robots-txt-文件" tabindex="-1"><a class="header-anchor" href="#_4-urllib-robotparser-—-解析-robots-txt-文件" aria-hidden="true">#</a> 4. urllib.robotparser — 解析 robots.txt 文件</h3><ul><li><strong>检查 URL 是否允许被爬虫访问</strong>：<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>robotparser <span class="token keyword">import</span> RobotFileParser

robot_parser <span class="token operator">=</span> RobotFileParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
robot_parser<span class="token punctuation">.</span>set_url<span class="token punctuation">(</span><span class="token string">&#39;http://www.example.com/robots.txt&#39;</span><span class="token punctuation">)</span>
robot_parser<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

url_to_check <span class="token operator">=</span> <span class="token string">&#39;http://www.example.com/somepage&#39;</span>
<span class="token keyword">if</span> robot_parser<span class="token punctuation">.</span>can_fetch<span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> url_to_check<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>url_to_check<span class="token punctuation">,</span> <span class="token string">&#39;can be fetched.&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>url_to_check<span class="token punctuation">,</span> <span class="token string">&#39;cannot be fetched.&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><code>urllib</code> 库是 Python 进行网络请求和 URL 处理的基石，它提供了一套丰富的工具来处理网络通信和 URL 相关的操作。</p><blockquote><p>喜欢这篇文章的话，可以关注一下我的公众号『<strong>海哥python</strong>』</p></blockquote>`,14),o=[e];function l(c,i){return s(),a("div",null,o)}const d=n(p,[["render",l],["__file","4.urllib模块的基本使用.html.vue"]]);export{d as default};
