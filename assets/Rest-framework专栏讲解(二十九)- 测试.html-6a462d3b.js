import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c as r,a as n,b as a,e,f as t}from"./app-7702e136.js";const c={},l=t('<h1 id="rest-framework专栏讲解-二十九-测试" tabindex="-1"><a class="header-anchor" href="#rest-framework专栏讲解-二十九-测试" aria-hidden="true">#</a> Rest-framework专栏讲解(二十九): 测试</h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#%E6%B5%8B%E8%AF%95">测试</a></li><li><a href="#APIRequestFactory">APIRequestFactory</a><ul><li><a href="#%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E8%AF%B7%E6%B1%82">创建测试请求</a><ul><li><a href="#%E4%BD%BF%E7%94%A8-format-%E5%8F%82%E6%95%B0">使用 format 参数</a></li><li><a href="#%E6%98%BE%E5%BC%8F%E7%BC%96%E7%A0%81%E8%AF%B7%E6%B1%82%E4%B8%BB%E4%BD%93">显式编码请求主体</a></li><li><a href="#PUT-%E5%92%8C-PATCH-%E4%B8%8E%E8%A1%A8%E5%8D%95%E6%95%B0%E6%8D%AE">PUT 和 PATCH 与表单数据</a></li></ul></li><li><a href="#%E5%BC%BA%E5%88%B6%E8%AE%A4%E8%AF%81">强制认证</a></li><li><a href="#%E5%BC%BA%E5%88%B6-CSRF-%E9%AA%8C%E8%AF%81">强制 CSRF 验证</a></li></ul></li><li><a href="#APIClient">APIClient</a><ul><li><a href="#%E5%8F%91%E5%87%BA%E8%AF%B7%E6%B1%82">发出请求</a></li><li><a href="#%E8%AE%A4%E8%AF%81">认证</a><ul><li><a href="#loginkwargs">.login(**kwargs)</a></li><li><a href="#credentialskwargs">.credentials(**kwargs)</a></li><li><a href="#force_authenticateuserNone-tokenNone">.force_authenticate(user=None, token=None)</a></li></ul></li><li><a href="#CSRF-%E9%AA%8C%E8%AF%81">CSRF 验证</a></li></ul></li><li><a href="#RequestsClient">RequestsClient</a><ul><li><a href="#RequestsClient-%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%B5%B7%E5%B7%A5%E4%BD%9C">RequestsClient 与数据库一起工作</a></li><li><a href="#Headers--%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81">Headers &amp; 身份验证</a></li><li><a href="#CSRF">CSRF</a></li><li><a href="#Live-tests">Live tests</a></li></ul></li><li><a href="#CoreAPIClient">CoreAPIClient</a><ul><li><a href="#Headers--%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81">Headers &amp; 身份验证</a></li></ul></li><li><a href="#API-Test-cases">API Test cases</a><ul><li><a href="#%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90">举个栗子</a></li></ul></li><li><a href="#URLPatternsTestCase">URLPatternsTestCase</a><ul><li><a href="#%E4%BE%8B%E5%A6%82">例如</a></li></ul></li><li><a href="#%E6%B5%8B%E8%AF%95%E5%93%8D%E5%BA%94">测试响应</a><ul><li><a href="#%E6%A3%80%E6%9F%A5%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE">检查响应数据</a></li><li><a href="#%E6%B8%B2%E6%9F%93%E5%93%8D%E5%BA%94">渲染响应</a></li></ul></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a><ul><li><a href="#%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E6%A0%BC%E5%BC%8F">设置默认格式</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E5%8F%AF%E7%94%A8%E7%9A%84%E6%A0%BC%E5%BC%8F">设置可用的格式</a></li></ul></li></ul>',3),d={href:"http://www.django-rest-framework.org/api-guide/testing/",title:"官方原文链接",target:"_blank",rel:"noopener noreferrer"},u={id:"测试",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#测试","aria-hidden":"true"},"#",-1),h={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E6%B5%8B%E8%AF%95",title:"测试",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,"REST framework 包含一些扩展 Django 现有测试框架的助手类，并改进对 API 请求的支持。",-1),m={id:"apirequestfactory",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#apirequestfactory","aria-hidden":"true"},"#",-1),b={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=apirequestfactory",title:"APIRequestFactory",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,[a("扩展了 Django 现有的 "),n("code",null,"RequestFactory"),a(" 类。")],-1),_={id:"创建测试请求",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#创建测试请求","aria-hidden":"true"},"#",-1),y={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E8%AF%B7%E6%B1%82",title:"创建测试请求",target:"_blank",rel:"noopener noreferrer"},C=t(`<p><code>APIRequestFactory</code> 类支持与 Django 的标准 <code>RequestFactory</code> 类几乎完全相同的 API。这意味着标准的 <code>.get()</code>, <code>.post()</code>, <code>.put()</code>, <code>.patch()</code>, <code>.delete()</code>, <code>.head()</code> 和 <code>.options()</code> 方法都可用。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>test <span class="token keyword">import</span> APIRequestFactory

<span class="token comment"># Using the standard RequestFactory API to create a form POST request</span>
factory <span class="token operator">=</span> APIRequestFactory<span class="token punctuation">(</span><span class="token punctuation">)</span>
request <span class="token operator">=</span> factory<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&#39;/notes/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;new idea&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),A={id:"使用-format-参数",tabindex:"-1"},B=n("a",{class:"header-anchor",href:"#使用-format-参数","aria-hidden":"true"},"#",-1),x={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E4%BD%BF%E7%94%A8-format-%E5%8F%82%E6%95%B0",title:"使用 ",target:"_blank",rel:"noopener noreferrer"},F={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E4%BD%BF%E7%94%A8-format-%E5%8F%82%E6%95%B0",title:"format",target:"_blank",rel:"noopener noreferrer"},w={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E4%BD%BF%E7%94%A8-format-%E5%8F%82%E6%95%B0",title:" 参数",target:"_blank",rel:"noopener noreferrer"},P=t(`<p>创建请求主体（如 <code>post</code>，<code>put</code> 和 <code>patch</code>）的方法包括 <code>format</code> 参数，这使得使用除 multipart 表单数据以外的内容类型生成请求变得容易。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create a JSON POST request</span>
factory <span class="token operator">=</span> APIRequestFactory<span class="token punctuation">(</span><span class="token punctuation">)</span>
request <span class="token operator">=</span> factory<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&#39;/notes/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;new idea&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，可用的格式是 <code>&#39;multipart&#39;</code> 和 <code>&#39;json&#39;</code> 。为了与 Django 现有的 <code>RequestFactory</code> 兼容，默认格式是 <code>&#39;multipart&#39;</code>。</p>`,3),T={id:"显式编码请求主体",tabindex:"-1"},R=n("a",{class:"header-anchor",href:"#显式编码请求主体","aria-hidden":"true"},"#",-1),q={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E6%98%BE%E5%BC%8F%E7%BC%96%E7%A0%81%E8%AF%B7%E6%B1%82%E4%B8%BB%E4%BD%93",title:"显式编码请求主体",target:"_blank",rel:"noopener noreferrer"},z=t(`<p>如果你需要显式编码请求正文，则可以通过设置 <code>content_type</code> 标志来完成。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>request <span class="token operator">=</span> factory<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&#39;/notes/&#39;</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;new idea&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> content_type<span class="token operator">=</span><span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),S={id:"put-和-patch-与表单数据",tabindex:"-1"},K=n("a",{class:"header-anchor",href:"#put-和-patch-与表单数据","aria-hidden":"true"},"#",-1),I={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=put-%E5%92%8C-patch-%E4%B8%8E%E8%A1%A8%E5%8D%95%E6%95%B0%E6%8D%AE",title:"PUT 和 PATCH 与表单数据",target:"_blank",rel:"noopener noreferrer"},D=t(`<p>Django 的 <code>RequestFactory</code> 和 REST framework 的 <code>APIRequestFactory</code> 之间值得注意的一个区别是 multipart 表单数据将被编码为除 <code>.post()</code> 以外的方法。</p><p>例如，使用 <code>APIRequestFactory</code>，你可以像这样做一个表单 PUT 请求：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>factory <span class="token operator">=</span> APIRequestFactory<span class="token punctuation">(</span><span class="token punctuation">)</span>
request <span class="token operator">=</span> factory<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">&#39;/notes/547/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;remember to email dave&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 Django 的 <code>RequestFactory</code>，你需要自己显式编码数据：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>test<span class="token punctuation">.</span>client <span class="token keyword">import</span> encode_multipart<span class="token punctuation">,</span> RequestFactory

factory <span class="token operator">=</span> RequestFactory<span class="token punctuation">(</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;remember to email dave&#39;</span><span class="token punctuation">}</span>
content <span class="token operator">=</span> encode_multipart<span class="token punctuation">(</span><span class="token string">&#39;BoUnDaRyStRiNg&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
content_type <span class="token operator">=</span> <span class="token string">&#39;multipart/form-data; boundary=BoUnDaRyStRiNg&#39;</span>
request <span class="token operator">=</span> factory<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">&#39;/notes/547/&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">,</span> content_type<span class="token operator">=</span>content_type<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),N={id:"强制认证",tabindex:"-1"},j=n("a",{class:"header-anchor",href:"#强制认证","aria-hidden":"true"},"#",-1),M={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E5%BC%BA%E5%88%B6%E8%AE%A4%E8%AF%81",title:"强制认证",target:"_blank",rel:"noopener noreferrer"},W=t(`<p>当使用请求工厂直接测试视图时，能够直接验证请求通常很方便，而不必构造正确的验证凭证。</p><p>要强制验证请求，请使用 <code>force_authenticate()</code> 方法。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>test <span class="token keyword">import</span> force_authenticate

factory <span class="token operator">=</span> APIRequestFactory<span class="token punctuation">(</span><span class="token punctuation">)</span>
user <span class="token operator">=</span> User<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">&#39;olivia&#39;</span><span class="token punctuation">)</span>
view <span class="token operator">=</span> AccountDetail<span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Make an authenticated request to the view...</span>
request <span class="token operator">=</span> factory<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;/accounts/django-superstars/&#39;</span><span class="token punctuation">)</span>
force_authenticate<span class="token punctuation">(</span>request<span class="token punctuation">,</span> user<span class="token operator">=</span>user<span class="token punctuation">)</span>
response <span class="token operator">=</span> view<span class="token punctuation">(</span>request<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该方法的签名是 <code>force_authenticate(request, user=None, token=None)</code>。调用时，可以设置 user 和 token 中的任一个或两个。</p><p>例如，当使用令牌强行进行身份验证时，你可能会执行以下操作：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>user <span class="token operator">=</span> User<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">&#39;olivia&#39;</span><span class="token punctuation">)</span>
request <span class="token operator">=</span> factory<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;/accounts/django-superstars/&#39;</span><span class="token punctuation">)</span>
force_authenticate<span class="token punctuation">(</span>request<span class="token punctuation">,</span> user<span class="token operator">=</span>user<span class="token punctuation">,</span> token<span class="token operator">=</span>user<span class="token punctuation">.</span>auth_token<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p><strong>注意</strong>: <code>force_authenticate</code> 直接将 <code>request.user</code> 设置为内存中的 <code>user</code> 实例。如果跨多个测试重新使用同一个 <code>user</code> 实例来更新已保存的 <code>user</code> 状态，则可能需要在测试之间调用 <code>refresh_from_db()</code>。</p><hr><p><strong>注意</strong>: 使用 <code>APIRequestFactory</code> 时，返回的对象是 Django 的标准 <code>HttpRequest</code>，而不是 REST framework 的 <code>Request</code> 对象，只有在调用视图后才会生成该对象。</p><p>这意味着直接在请求对象上设置属性可能并不总是有你期望的效果。例如，直接设置 <code>.token</code> 将不起作用，并且仅在使用会话身份验证时直接设置 <code>.user</code> 才会起作用。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Request will only authenticate if \`SessionAuthentication\` is in use.</span>
request <span class="token operator">=</span> factory<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;/accounts/django-superstars/&#39;</span><span class="token punctuation">)</span>
request<span class="token punctuation">.</span>user <span class="token operator">=</span> user
response <span class="token operator">=</span> view<span class="token punctuation">(</span>request<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,13),G={id:"强制-csrf-验证",tabindex:"-1"},U=n("a",{class:"header-anchor",href:"#强制-csrf-验证","aria-hidden":"true"},"#",-1),H={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E5%BC%BA%E5%88%B6-csrf-%E9%AA%8C%E8%AF%81",title:"强制 CSRF 验证",target:"_blank",rel:"noopener noreferrer"},L=t(`<p>默认情况下，使用 <code>APIRequestFactory</code> 创建的请求在传递给 REST framework 视图时不会应用 CSRF 验证。如果你需要明确打开 CSRF 验证，则可以通过在实例化工厂时设置 <code>enforce_csrf_checks</code> 标志来实现。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>factory <span class="token operator">=</span> APIRequestFactory<span class="token punctuation">(</span>enforce_csrf_checks<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p><strong>注意</strong>: 值得注意的是，Django 的标准 <code>RequestFactory</code> 不需要包含这个选项，因为当使用常规的 Django 时，CSRF 验证发生在中间件中，当直接测试视图时该中间件不运行。在使用 REST framework 时，CSRF 验证发生在视图内，因此请求工厂需要禁用视图级 CSRF 检查。</p><hr>`,5),O={id:"apiclient",tabindex:"-1"},J=n("a",{class:"header-anchor",href:"#apiclient","aria-hidden":"true"},"#",-1),Q={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=apiclient",title:"APIClient",target:"_blank",rel:"noopener noreferrer"},V=n("p",null,[a("扩展了 Django 现有的 "),n("code",null,"Client"),a(" 类。")],-1),X={id:"发出请求",tabindex:"-1"},Z=n("a",{class:"header-anchor",href:"#发出请求","aria-hidden":"true"},"#",-1),Y={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E5%8F%91%E5%87%BA%E8%AF%B7%E6%B1%82",title:"发出请求",target:"_blank",rel:"noopener noreferrer"},$=t(`<p><code>APIClient</code> 类支持与 Django 标准 <code>Client</code> 类相同的请求接口。这意味着标准的 <code>.get()</code>, <code>.post()</code>, <code>.put()</code>, <code>.patch()</code>, <code>.delete()</code>, <code>.head()</code> 和 <code>.options()</code> 方法都可用。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>test <span class="token keyword">import</span> APIClient

client <span class="token operator">=</span> APIClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&#39;/notes/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;new idea&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),nn={id:"认证",tabindex:"-1"},an=n("a",{class:"header-anchor",href:"#认证","aria-hidden":"true"},"#",-1),sn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E8%AE%A4%E8%AF%81",title:"认证",target:"_blank",rel:"noopener noreferrer"},en={id:"login-kwargs",tabindex:"-1"},tn=n("a",{class:"header-anchor",href:"#login-kwargs","aria-hidden":"true"},"#",-1),on={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=loginkwargs",title:".login(**kwargs)",target:"_blank",rel:"noopener noreferrer"},pn=t(`<p><code>login</code> 方法的功能与 Django 的常规 <code>Client</code> 类一样。这使你可以对任何包含 <code>SessionAuthentication</code> 的视图进行身份验证。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Make all requests in the context of a logged in session.</span>
client <span class="token operator">=</span> APIClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>login<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">&#39;lauren&#39;</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">&#39;secret&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要登出，请照常调用 <code>logout</code> 方法。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Log out</span>
client<span class="token punctuation">.</span>logout<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>login</code> 方法适用于测试使用会话认证的 API，例如包含 AJAX 与 API 交互的网站。</p>`,5),rn={id:"credentials-kwargs",tabindex:"-1"},cn=n("a",{class:"header-anchor",href:"#credentials-kwargs","aria-hidden":"true"},"#",-1),ln={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=credentialskwargs",title:".credentials(**kwargs)",target:"_blank",rel:"noopener noreferrer"},dn=t(`<p><code>credentials</code> 方法可用于设置 header，这些 header 将包含在测试客户端的所有后续请求中。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>authtoken<span class="token punctuation">.</span>models <span class="token keyword">import</span> Token
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>test <span class="token keyword">import</span> APIClient

<span class="token comment"># Include an appropriate \`Authorization:\` header on all requests.</span>
token <span class="token operator">=</span> Token<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>user__username<span class="token operator">=</span><span class="token string">&#39;lauren&#39;</span><span class="token punctuation">)</span>
client <span class="token operator">=</span> APIClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>credentials<span class="token punctuation">(</span>HTTP_AUTHORIZATION<span class="token operator">=</span><span class="token string">&#39;Token &#39;</span> <span class="token operator">+</span> token<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，第二次调用 <code>credentials</code> 会覆盖任何现有凭证。你可以通过调用没有参数的方法来取消任何现有的凭证。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Stop including any credentials</span>
client<span class="token punctuation">.</span>credentials<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>credentials</code> 方法适用于测试需要验证 header 的 API，例如 basic 验证，OAuth1 和 OAuth2 验证以及简单令牌验证方案。</p>`,5),un={id:"force-authenticate-user-none-token-none",tabindex:"-1"},kn=n("a",{class:"header-anchor",href:"#force-authenticate-user-none-token-none","aria-hidden":"true"},"#",-1),hn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=force_authenticateusernone-tokennone",title:".force_authenticate(user=None, token=None)",target:"_blank",rel:"noopener noreferrer"},fn=t(`<p>有时你可能想完全绕过认证，强制测试客户端的所有请求被自动视为已认证。</p><p>如果你正在测试 API 但是不想构建有效的身份验证凭据以进行测试请求，则这可能是一个有用的捷径。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>user <span class="token operator">=</span> User<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">&#39;lauren&#39;</span><span class="token punctuation">)</span>
client <span class="token operator">=</span> APIClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>force_authenticate<span class="token punctuation">(</span>user<span class="token operator">=</span>user<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要对后续请求进行身份验证，请调用 <code>force_authenticate</code> 将 user 和(或) token 设置为 <code>None</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>client<span class="token punctuation">.</span>force_authenticate<span class="token punctuation">(</span>user<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),mn={id:"csrf-验证",tabindex:"-1"},gn=n("a",{class:"header-anchor",href:"#csrf-验证","aria-hidden":"true"},"#",-1),bn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=csrf-%E9%AA%8C%E8%AF%81",title:"CSRF 验证",target:"_blank",rel:"noopener noreferrer"},vn=t(`<p>默认情况下，使用 <code>APIClient</code> 时不应用 CSRF 验证。如果你需要明确启用 CSRF 验证，则可以通过在实例化客户端时设置 <code>enforce_csrf_checks</code> 标志来实现。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>client <span class="token operator">=</span> APIClient<span class="token punctuation">(</span>enforce_csrf_checks<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>像往常一样，CSRF 验证将仅适用于任何会话验证视图。这意味着 CSRF 验证只有在客户端通过调用 <code>login()</code> 登录后才会发生。</p><hr>`,4),_n={id:"requestsclient",tabindex:"-1"},En=n("a",{class:"header-anchor",href:"#requestsclient","aria-hidden":"true"},"#",-1),yn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=requestsclient",title:"RequestsClient",target:"_blank",rel:"noopener noreferrer"},Cn=t(`<p>REST framework 还包含一个客户端，用于使用流行的 Python 库 <code>requests</code> 与应用程序进行交互。 这可能是有用的，如果：</p><ul><li>你期望主要从另一个 Python 服务与 API 进行交互，并且希望在与客户端相同的级别测试该服务。</li><li>你希望以这样的方式编写测试，以便它们也可以在分段或实时环境中运行。</li></ul><p>它暴露了与直接使用请求会话完全相同的接口。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>client <span class="token operator">=</span> RequestsClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> client<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;http://testserver/users/&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，requests client 要求你传递完全限定的 URL。</p>`,5),An={id:"requestsclient-与数据库一起工作",tabindex:"-1"},Bn=n("a",{class:"header-anchor",href:"#requestsclient-与数据库一起工作","aria-hidden":"true"},"#",-1),xn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=requestsclient-%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%B5%B7%E5%B7%A5%E4%BD%9C",title:"RequestsClient",target:"_blank",rel:"noopener noreferrer"},Fn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=requestsclient-%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%B5%B7%E5%B7%A5%E4%BD%9C",title:" 与数据库一起工作",target:"_blank",rel:"noopener noreferrer"},wn=n("p",null,[a("如果你想编写仅与服务接口交互的测试，则 "),n("code",null,"RequestsClient"),a(" 类很有用。这比使用标准的 Django 测试客户端要严格一些，因为这意味着所有的交互必须通过 API。")],-1),Pn=n("p",null,[a("如果你使用的是 "),n("code",null,"RequestsClient"),a("，你需要确保测试设置和结果断言以常规 API 调用的方式执行，而不是直接与数据库模型进行交互。例如，不是检查 "),n("code",null,"Customer.objects.count() == 3"),a("，而是列出 customers 端点，并确保它包含三条记录。")],-1),Tn={id:"headers-身份验证",tabindex:"-1"},Rn=n("a",{class:"header-anchor",href:"#headers-身份验证","aria-hidden":"true"},"#",-1),qn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=headers-amp-%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81",title:"Headers & 身份验证",target:"_blank",rel:"noopener noreferrer"},zn=t(`<p>自定义 header 和身份验证凭证的提供方式与使用标准 <code>requests.Session</code> 实例时的方式相同。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> requests<span class="token punctuation">.</span>auth <span class="token keyword">import</span> HTTPBasicAuth

client<span class="token punctuation">.</span>auth <span class="token operator">=</span> HTTPBasicAuth<span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pass&#39;</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;x-test&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Sn={id:"csrf",tabindex:"-1"},Kn=n("a",{class:"header-anchor",href:"#csrf","aria-hidden":"true"},"#",-1),In={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=csrf",title:"CSRF",target:"_blank",rel:"noopener noreferrer"},Dn=t(`<p>如果你使用 <code>SessionAuthentication</code> ，那么你需要为 <code>POST</code>, <code>PUT</code>, <code>PATCH</code> 或 <code>DELETE</code> 请求包含一个 CSRF 令牌。</p><p>你可以通过遵循基于 JavaScript 的客户端使用的相同流程来实现。首先进行 <code>GET</code> 请求以获取 CRSF 令牌，然后在以下请求中呈现该令牌。</p><p>例如...</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>client <span class="token operator">=</span> RequestsClient<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Obtain a CSRF token.</span>
response <span class="token operator">=</span> client<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;/homepage/&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span>
csrftoken <span class="token operator">=</span> response<span class="token punctuation">.</span>cookies<span class="token punctuation">[</span><span class="token string">&#39;csrftoken&#39;</span><span class="token punctuation">]</span>

<span class="token comment"># Interact with the API.</span>
response <span class="token operator">=</span> client<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&#39;/organisations/&#39;</span><span class="token punctuation">,</span> json<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;MegaCorp&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;active&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;X-CSRFToken&#39;</span><span class="token punctuation">:</span> csrftoken<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Nn={id:"live-tests",tabindex:"-1"},jn=n("a",{class:"header-anchor",href:"#live-tests","aria-hidden":"true"},"#",-1),Mn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=live-tests",title:"Live tests",target:"_blank",rel:"noopener noreferrer"},Wn=n("p",null,[a("使用 "),n("code",null,"RequestsClient"),a(" 和 "),n("code",null,"CoreAPIClient"),a(" 可以编写在开发环境中运行的测试用例，也可以直接根据测试服务器或生产环境运行测试用例。")],-1),Gn=n("p",null,"使用这种风格来创建几个核心功能的基本测试是验证你的实时服务的有效方法。这样做可能需要仔细注意安装和卸载（setup and teardown），以确保测试的运行方式不会直接影响客户数据。",-1),Un=n("hr",null,null,-1),Hn={id:"coreapiclient",tabindex:"-1"},Ln=n("a",{class:"header-anchor",href:"#coreapiclient","aria-hidden":"true"},"#",-1),On={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=coreapiclient",title:"CoreAPIClient",target:"_blank",rel:"noopener noreferrer"},Jn=t(`<p>CoreAPIClient 允许你使用 Python <code>coreapi</code> 客户端库与你的 API 进行交互。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fetch the API schema</span>
client <span class="token operator">=</span> CoreAPIClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
schema <span class="token operator">=</span> client<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;http://testserver/schema/&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># Create a new organisation</span>
params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;MegaCorp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;active&#39;</span><span class="token punctuation">}</span>
client<span class="token punctuation">.</span>action<span class="token punctuation">(</span>schema<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;organisations&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;create&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>

<span class="token comment"># Ensure that the organisation exists in the listing</span>
data <span class="token operator">=</span> client<span class="token punctuation">.</span>action<span class="token punctuation">(</span>schema<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;organisations&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span><span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;MegaCorp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;active&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Qn={id:"headers-身份验证-1",tabindex:"-1"},Vn=n("a",{class:"header-anchor",href:"#headers-身份验证-1","aria-hidden":"true"},"#",-1),Xn={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=headers-amp-%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81-1",title:"Headers & 身份验证",target:"_blank",rel:"noopener noreferrer"},Zn=t(`<p>自定义 header 和身份验证可以与 <code>RequestsClient</code> 类似的方式和 <code>CoreAPIClient</code> 一起使用。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> requests<span class="token punctuation">.</span>auth <span class="token keyword">import</span> HTTPBasicAuth

client <span class="token operator">=</span> CoreAPIClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>session<span class="token punctuation">.</span>auth <span class="token operator">=</span> HTTPBasicAuth<span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pass&#39;</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>session<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;x-test&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,3),Yn={id:"api-test-cases",tabindex:"-1"},$n=n("a",{class:"header-anchor",href:"#api-test-cases","aria-hidden":"true"},"#",-1),na={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=api-test-cases",title:"API Test cases",target:"_blank",rel:"noopener noreferrer"},aa=t("<p>REST framework 包含以下测试用例类，它们类似现有的 Django 测试用例类，但使用 <code>APIClient</code> 而不是 Django 的默认 <code>Client</code>。</p><ul><li><code>APISimpleTestCase</code></li><li><code>APITransactionTestCase</code></li><li><code>APITestCase</code></li><li><code>APILiveServerTestCase</code></li></ul>",2),sa={id:"举个栗子",tabindex:"-1"},ea=n("a",{class:"header-anchor",href:"#举个栗子","aria-hidden":"true"},"#",-1),ta={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90",title:"举个栗子",target:"_blank",rel:"noopener noreferrer"},oa=t(`<p>你可以像使用常规 Django 测试用例类一样使用任何 REST framework 的测试用例类。 <code>self.client</code> 属性将是一个 <code>APIClient</code> 实例。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> reverse
<span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> status
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>test <span class="token keyword">import</span> APITestCase
<span class="token keyword">from</span> myproject<span class="token punctuation">.</span>apps<span class="token punctuation">.</span>core<span class="token punctuation">.</span>models <span class="token keyword">import</span> Account

<span class="token keyword">class</span> <span class="token class-name">AccountTests</span><span class="token punctuation">(</span>APITestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">test_create_account</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        Ensure we can create a new account object.
        &quot;&quot;&quot;</span>
        url <span class="token operator">=</span> reverse<span class="token punctuation">(</span><span class="token string">&#39;account-list&#39;</span><span class="token punctuation">)</span>
        data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;DabApps&#39;</span><span class="token punctuation">}</span>
        response <span class="token operator">=</span> self<span class="token punctuation">.</span>client<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> status<span class="token punctuation">.</span>HTTP_201_CREATED<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>Account<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>Account<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&#39;DabApps&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,3),pa={id:"urlpatternstestcase",tabindex:"-1"},ia=n("a",{class:"header-anchor",href:"#urlpatternstestcase","aria-hidden":"true"},"#",-1),ra={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=urlpatternstestcase",title:"URLPatternsTestCase",target:"_blank",rel:"noopener noreferrer"},ca=n("p",null,[a("REST framework 还提供了一个用于隔离每个类的 "),n("code",null,"urlpatterns"),a(" 的测试用例类。请注意，它继承自 Django 的 "),n("code",null,"SimpleTestCase"),a("，并且很可能需要与另一个测试用例类混合使用。")],-1),la={id:"例如",tabindex:"-1"},da=n("a",{class:"header-anchor",href:"#例如","aria-hidden":"true"},"#",-1),ua={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E4%BE%8B%E5%A6%82",title:"例如",target:"_blank",rel:"noopener noreferrer"},ka=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> include<span class="token punctuation">,</span> path<span class="token punctuation">,</span> reverse
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>test <span class="token keyword">import</span> APITestCase<span class="token punctuation">,</span> URLPatternsTestCase


<span class="token keyword">class</span> <span class="token class-name">AccountTests</span><span class="token punctuation">(</span>APITestCase<span class="token punctuation">,</span> URLPatternsTestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>
    urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
        path<span class="token punctuation">(</span><span class="token string">&#39;api/&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">&#39;api.urls&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">test_create_account</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        Ensure we can create a new account object.
        &quot;&quot;&quot;</span>
        url <span class="token operator">=</span> reverse<span class="token punctuation">(</span><span class="token string">&#39;account-list&#39;</span><span class="token punctuation">)</span>
        response <span class="token operator">=</span> self<span class="token punctuation">.</span>client<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> status<span class="token punctuation">.</span>HTTP_200_OK<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,2),ha={id:"测试响应",tabindex:"-1"},fa=n("a",{class:"header-anchor",href:"#测试响应","aria-hidden":"true"},"#",-1),ma={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E6%B5%8B%E8%AF%95%E5%93%8D%E5%BA%94",title:"测试响应",target:"_blank",rel:"noopener noreferrer"},ga={id:"检查响应数据",tabindex:"-1"},ba=n("a",{class:"header-anchor",href:"#检查响应数据","aria-hidden":"true"},"#",-1),va={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E6%A3%80%E6%9F%A5%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE",title:"检查响应数据",target:"_blank",rel:"noopener noreferrer"},_a=t(`<p>在检查测试响应的有效性时，检查响应的创建数据通常比较方便，而不是检查完全渲染的响应。</p><p>例如，检查 <code>response.data</code> 更容易：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>response <span class="token operator">=</span> self<span class="token punctuation">.</span>client<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;/users/4/&#39;</span><span class="token punctuation">)</span>
self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lauren&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>而不是检查解析 <code>response.content</code> 的结果：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>response <span class="token operator">=</span> self<span class="token punctuation">.</span>client<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;/users/4/&#39;</span><span class="token punctuation">)</span>
self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lauren&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Ea={id:"渲染响应",tabindex:"-1"},ya=n("a",{class:"header-anchor",href:"#渲染响应","aria-hidden":"true"},"#",-1),Ca={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E6%B8%B2%E6%9F%93%E5%93%8D%E5%BA%94",title:"渲染响应",target:"_blank",rel:"noopener noreferrer"},Aa=t(`<p>如果你使用 <code>APIRequestFactory</code> 直接测试视图，则返回的响应将不会渲染，因为模板响应的渲染由 Django 的内部请求 - 响应循环执行。为了访问 <code>response.content</code>，你首先需要渲染响应。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>view <span class="token operator">=</span> UserDetail<span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span>
request <span class="token operator">=</span> factory<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;/users/4&#39;</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> view<span class="token punctuation">(</span>request<span class="token punctuation">,</span> pk<span class="token operator">=</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">)</span>
response<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># Cannot access \`response.content\` without this.</span>
self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">,</span> <span class="token string">&#39;{&quot;username&quot;: &quot;lauren&quot;, &quot;id&quot;: 4}&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,3),Ba={id:"配置",tabindex:"-1"},xa=n("a",{class:"header-anchor",href:"#配置","aria-hidden":"true"},"#",-1),Fa={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E9%85%8D%E7%BD%AE",title:"配置",target:"_blank",rel:"noopener noreferrer"},wa={id:"设置默认格式",tabindex:"-1"},Pa=n("a",{class:"header-anchor",href:"#设置默认格式","aria-hidden":"true"},"#",-1),Ta={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E6%A0%BC%E5%BC%8F",title:"设置默认格式",target:"_blank",rel:"noopener noreferrer"},Ra=t(`<p>用于创建测试请求的默认格式可以使用 <code>TEST_REQUEST_DEFAULT_FORMAT</code> setting key 进行设置。例如，默认情况下总是对测试请求使用 JSON 而不是标准的 multipart 表单请求，请在 <code>settings.py</code> 文件中设置以下内容：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token string">&#39;TEST_REQUEST_DEFAULT_FORMAT&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;json&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),qa={id:"设置可用的格式",tabindex:"-1"},za=n("a",{class:"header-anchor",href:"#设置可用的格式","aria-hidden":"true"},"#",-1),Sa={href:"http://wiznote-desktop/ks/note/view/79a579df-0e97-4971-8f60-86ed3beffd85/124a8dac-eead-4114-a3a6-b68772043a01/index.html?lang=zh-cn&readerType=common&isPersonalKb=1&canEdit=1&userGuid=79a579df-0e97-4971-8f60-86ed3beffd85&alias=godl9211&pSpacing=16&darkBgColor=transparent&darkTextColor=#f0f0f0&isFromWizClipper=1&xssNoFrame=1&themeMode=auto&resourcesPath=&frameKey=normal_note_124a8dac-eead-4114-a3a6-b68772043a01#/drf/testing?id=%E8%AE%BE%E7%BD%AE%E5%8F%AF%E7%94%A8%E7%9A%84%E6%A0%BC%E5%BC%8F",title:"设置可用的格式",target:"_blank",rel:"noopener noreferrer"},Ka=t(`<p>如果你需要使用除 multipart 或 json 请求之外的其他方法来测试请求，则可以通过设置 <code>TEST_REQUEST_RENDERER_CLASSES</code> setting 来完成。</p><p>例如，要在测试请求中添加对 <code>format =&#39;html&#39;</code> 的支持，您可能在 <code>settings.py</code> 文件中有这样的内容。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token string">&#39;TEST_REQUEST_RENDERER_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token string">&#39;rest_framework.renderers.MultiPartRenderer&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;rest_framework.renderers.JSONRenderer&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;rest_framework.renderers.TemplateHTMLRenderer&#39;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,4);function Ia(Da,Na){const s=p("ExternalLinkIcon");return i(),r("div",null,[l,n("blockquote",null,[n("p",null,[n("a",d,[a("官方原文链接"),e(s)])])]),n("h1",u,[k,a(),n("a",h,[a("测试"),e(s)])]),f,n("h1",m,[g,a(),n("a",b,[a("APIRequestFactory"),e(s)])]),v,n("h2",_,[E,a(),n("a",y,[a("创建测试请求"),e(s)])]),C,n("h4",A,[B,a(),n("a",x,[a("使用 "),e(s)]),n("a",F,[a("format"),e(s)]),n("a",w,[a(" 参数"),e(s)])]),P,n("h4",T,[R,a(),n("a",q,[a("显式编码请求主体"),e(s)])]),z,n("h4",S,[K,a(),n("a",I,[a("PUT 和 PATCH 与表单数据"),e(s)])]),D,n("h2",N,[j,a(),n("a",M,[a("强制认证"),e(s)])]),W,n("h2",G,[U,a(),n("a",H,[a("强制 CSRF 验证"),e(s)])]),L,n("h1",O,[J,a(),n("a",Q,[a("APIClient"),e(s)])]),V,n("h2",X,[Z,a(),n("a",Y,[a("发出请求"),e(s)])]),$,n("h2",nn,[an,a(),n("a",sn,[a("认证"),e(s)])]),n("h4",en,[tn,a(),n("a",on,[a(".login(**kwargs)"),e(s)])]),pn,n("h4",rn,[cn,a(),n("a",ln,[a(".credentials(**kwargs)"),e(s)])]),dn,n("h4",un,[kn,a(),n("a",hn,[a(".force_authenticate(user=None, token=None)"),e(s)])]),fn,n("h2",mn,[gn,a(),n("a",bn,[a("CSRF 验证"),e(s)])]),vn,n("h1",_n,[En,a(),n("a",yn,[a("RequestsClient"),e(s)])]),Cn,n("h2",An,[Bn,a(),n("a",xn,[a("RequestsClient"),e(s)]),n("a",Fn,[a(" 与数据库一起工作"),e(s)])]),wn,Pn,n("h2",Tn,[Rn,a(),n("a",qn,[a("Headers & 身份验证"),e(s)])]),zn,n("h2",Sn,[Kn,a(),n("a",In,[a("CSRF"),e(s)])]),Dn,n("h2",Nn,[jn,a(),n("a",Mn,[a("Live tests"),e(s)])]),Wn,Gn,Un,n("h1",Hn,[Ln,a(),n("a",On,[a("CoreAPIClient"),e(s)])]),Jn,n("h2",Qn,[Vn,a(),n("a",Xn,[a("Headers & 身份验证"),e(s)])]),Zn,n("h1",Yn,[$n,a(),n("a",na,[a("API Test cases"),e(s)])]),aa,n("h2",sa,[ea,a(),n("a",ta,[a("举个栗子"),e(s)])]),oa,n("h1",pa,[ia,a(),n("a",ra,[a("URLPatternsTestCase"),e(s)])]),ca,n("h2",la,[da,a(),n("a",ua,[a("例如"),e(s)])]),ka,n("h1",ha,[fa,a(),n("a",ma,[a("测试响应"),e(s)])]),n("h2",ga,[ba,a(),n("a",va,[a("检查响应数据"),e(s)])]),_a,n("h2",Ea,[ya,a(),n("a",Ca,[a("渲染响应"),e(s)])]),Aa,n("h1",Ba,[xa,a(),n("a",Fa,[a("配置"),e(s)])]),n("h2",wa,[Pa,a(),n("a",Ta,[a("设置默认格式"),e(s)])]),Ra,n("h2",qa,[za,a(),n("a",Sa,[a("设置可用的格式"),e(s)])]),Ka])}const Wa=o(c,[["render",Ia],["__file","Rest-framework专栏讲解(二十九)- 测试.html.vue"]]);export{Wa as default};
