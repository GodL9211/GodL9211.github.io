<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://godl9211.github.io/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jan 2023 19:22:13 +0800</lastBuildDate><atom:link href="https://godl9211.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My First Post</title>
      <link>https://godl9211.github.io/posts/my-first-post/</link>
      <pubDate>Tue, 10 Jan 2023 19:22:13 +0800</pubDate>
      
      <guid>https://godl9211.github.io/posts/my-first-post/</guid>
      <description>自定义异常 目前我们返回的一些异常信息，长这个样子
{ &amp;#34;detail&amp;#34;: &amp;#34;Authentication credentials were not provided.&amp;#34; } 这样结构，对于移动端程序员是极其不友好的，所以我们一般给对方返回这样的数据结构
{ &amp;#34;code&amp;#34;: 401, &amp;#34;message&amp;#34;: &amp;#34;Authentication credentials were not provided.&amp;#34;, &amp;#34;data&amp;#34;: [] } 那我们就需要自己异常来捕获DRF里面的异常信息
创建custom_exception.py文件
from rest_framework.views import exception_handler def custom_exception_handler(exc, context): response = exception_handler(exc, context) if response is not None: response.data.clear() response.data[&amp;#39;code&amp;#39;] = response.status_code response.data[&amp;#39;data&amp;#39;] = [] if response.status_code == 404: try: response.data[&amp;#39;message&amp;#39;] = response.data.pop(&amp;#39;detail&amp;#39;) response.data[&amp;#39;message&amp;#39;] = &amp;#34;未找到&amp;#34; except KeyError: response.data[&amp;#39;message&amp;#39;] = &amp;#34;未找到&amp;#34; if response.status_code == 400: response.data[&amp;#39;message&amp;#39;] = &amp;#39;输入错误&amp;#39; elif response.</description>
    </item>
    
  </channel>
</rss>
